Program.Sub.ScreenSU.Start
Gui.FrmOrderReview..Create(DashForm)
Gui.FrmOrderReview..Caption("Open SO/WO Dashboard [6924]")
Gui.FrmOrderReview..Size(14055,8670)
Gui.FrmOrderReview..MinX(0)
Gui.FrmOrderReview..MinY(0)
Gui.FrmOrderReview..Position(0,0)
Gui.FrmOrderReview..BackColor(-2147483633)
Gui.FrmOrderReview..MousePointer(0)
Gui.FrmOrderReview..Event(UnLoad,FrmOrderReview_UnLoad)
Gui.FrmOrderReview..AlwaysOnTop(False)
Gui.FrmOrderReview..FontName("Tahoma")
Gui.FrmOrderReview..FontSize(8.25)
Gui.FrmOrderReview..ControlBox(True)
Gui.FrmOrderReview..MaxButton(True)
Gui.FrmOrderReview..MinButton(True)
Gui.FrmOrderReview..Moveable(True)
Gui.FrmOrderReview..Sizeable(True)
Gui.FrmOrderReview..ShowInTaskBar(True)
Gui.FrmOrderReview..TitleBar(True)
Gui.FrmOrderReview..BarExportButton(True)
Gui.FrmOrderReview..BarRefreshButton(True)
Gui.FrmOrderReview..Event(ExportClick,FrmOrderReview_ExportClick)
Gui.FrmOrderReview..Event(RefreshClick,FrmOrderReview_RefreshClick)
Gui.FrmOrderReview..BarUndoButtons(False,True,True,True)
Gui.FrmOrderReview.acMenuItems.Create(AccordionControl)
Gui.FrmOrderReview.acMenuItems.Enabled(True)
Gui.FrmOrderReview.acMenuItems.Visible(True)
Gui.FrmOrderReview.acMenuItems.Size(3180,7680)
Gui.FrmOrderReview.acMenuItems.Position(0,0)
Gui.FrmOrderReview.acMenuItems.Minimized(False)
Gui.FrmOrderReview.acMenuItems.Dock(3)
Gui.FrmOrderReview.acMenuItems.Event(ElementClick,acMenuItems_ElementClick)
Gui.FrmOrderReview.acMenuItems.AddElement(aceAutoPO,"Auto Purchase Order Generation","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceAutoWO,"Auto Work Order Generation","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceBOM,"Create/Verify BOM","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(acePart,"Create/Verify Part","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceRouter,"Create/Verify Router","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceOpenDocs,"Open Part Documents","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceNewSO,"New Sales Order","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceNewWO,"New Work Order","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(acePrintWODocs,"Print Work Order Documents","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.acMenuItems.AddElement(aceReschedule,"Reschedule Work Order","icon_functions_black",240,240,,-1,0,"",False,True,False,1)
Gui.FrmOrderReview.GsGCAllOpen.Create(GsGridControl)
Gui.FrmOrderReview.GsGCAllOpen.Enabled(True)
Gui.FrmOrderReview.GsGCAllOpen.Visible(True)
Gui.FrmOrderReview.GsGCAllOpen.Zorder(0)
Gui.FrmOrderReview.GsGCAllOpen.Size(10875,7680)
Gui.FrmOrderReview.GsGCAllOpen.Position(3180,0)
Gui.FrmOrderReview.GsGCAllOpen.Event(RowCellClick,GsGCAllOpen_RowCellClick)
Gui.FrmOrderReview.GsGCAllOpen.Event(CellValueChanged,GsGCAllOpen_CellValueChanged)
Gui.FrmOrderReview.GsGCAllOpen.Dock(5)
Gui.FrmOrderReview.framePermissions.Create(Frame)
Gui.FrmOrderReview.framePermissions.Size(4305,450)
Gui.FrmOrderReview.framePermissions.Position(5400,45)
Gui.FrmOrderReview.framePermissions.Enabled(True)
Gui.FrmOrderReview.framePermissions.Visible(True)
Gui.FrmOrderReview.framePermissions.Zorder(0)
Gui.FrmOrderReview.framePermissions.Caption("")
Gui.FrmOrderReview.framePermissions.FontName("Tahoma")
Gui.FrmOrderReview.framePermissions.FontSize(8.25)
Gui.FrmOrderReview.framePermissions.Anchor(9)
Gui.FrmOrderReview.optEdit.Create(Option)
Gui.FrmOrderReview.optEdit.Enabled(False)
Gui.FrmOrderReview.optEdit.Size(645,255)
Gui.FrmOrderReview.optEdit.Position(855,150)
Gui.FrmOrderReview.optEdit.Caption("Edit")
Gui.FrmOrderReview.optEdit.Parent("framePermissions")
Gui.FrmOrderReview.optEdit.Visible(True)
Gui.FrmOrderReview.optEdit.Zorder(0)
Gui.FrmOrderReview.optEdit.FontName("Tahoma")
Gui.FrmOrderReview.optEdit.FontSize(8.25)
Gui.FrmOrderReview.optIssue.Create(Option)
Gui.FrmOrderReview.optIssue.Size(795,240)
Gui.FrmOrderReview.optIssue.Position(1515,150)
Gui.FrmOrderReview.optIssue.Caption("Issue")
Gui.FrmOrderReview.optIssue.Enabled(False)
Gui.FrmOrderReview.optIssue.Parent("framePermissions")
Gui.FrmOrderReview.optIssue.Visible(True)
Gui.FrmOrderReview.optIssue.Zorder(0)
Gui.FrmOrderReview.optIssue.FontName("Tahoma")
Gui.FrmOrderReview.optIssue.FontSize(8.25)
Gui.FrmOrderReview.optWiptoFG.Create(Option)
Gui.FrmOrderReview.optWiptoFG.Size(1080,255)
Gui.FrmOrderReview.optWiptoFG.Position(2325,150)
Gui.FrmOrderReview.optWiptoFG.Caption("Wip to FG")
Gui.FrmOrderReview.optWiptoFG.Enabled(False)
Gui.FrmOrderReview.optWiptoFG.Parent("framePermissions")
Gui.FrmOrderReview.optWiptoFG.Visible(True)
Gui.FrmOrderReview.optWiptoFG.Zorder(0)
Gui.FrmOrderReview.optWiptoFG.FontName("Tahoma")
Gui.FrmOrderReview.optWiptoFG.FontSize(8.25)
Gui.FrmOrderReview.optView.Create(Option)
Gui.FrmOrderReview.optView.Size(765,255)
Gui.FrmOrderReview.optView.Position(75,135)
Gui.FrmOrderReview.optView.Caption("View")
Gui.FrmOrderReview.optView.Parent("framePermissions")
Gui.FrmOrderReview.optView.Enabled(True)
Gui.FrmOrderReview.optView.Visible(True)
Gui.FrmOrderReview.optView.Zorder(0)
Gui.FrmOrderReview.optView.FontName("Tahoma")
Gui.FrmOrderReview.optView.FontSize(8.25)
Gui.FrmOrderReview.optShip.Create(Option)
Gui.FrmOrderReview.optShip.Enabled(False)
Gui.FrmOrderReview.optShip.Size(780,255)
Gui.FrmOrderReview.optShip.Position(3405,150)
Gui.FrmOrderReview.optShip.Parent("framePermissions")
Gui.FrmOrderReview.optShip.Caption("Ship")
Gui.FrmOrderReview.optShip.Visible(True)
Gui.FrmOrderReview.optShip.Zorder(0)
Gui.FrmOrderReview.optShip.FontName("Tahoma")
Gui.FrmOrderReview.optShip.FontSize(8.25)
Gui.FrmOrderReview.progressBar1.Create(ProgressBar)
Gui.FrmOrderReview.progressBar1.Size(1860,255)
Gui.FrmOrderReview.progressBar1.Position(3270,75)
Gui.FrmOrderReview.progressBar1.Visible(False)
Gui.FrmOrderReview.progressBar1.Anchor(9)
Gui.frmSelectVend..Create(BaseForm)
Gui.frmSelectVend..Caption("Select Vendor")
Gui.frmSelectVend..Size(14670,5085)
Gui.frmSelectVend..MinX(0)
Gui.frmSelectVend..MinY(0)
Gui.frmSelectVend..Position(0,0)
Gui.frmSelectVend..BackColor(-2147483633)
Gui.frmSelectVend..MousePointer(0)
Gui.frmSelectVend..Event(UnLoad,frmSelectVend_UnLoad)
Gui.frmSelectVend..AlwaysOnTop(False)
Gui.frmSelectVend..FontName("Tahoma")
Gui.frmSelectVend..FontSize(8.25)
Gui.frmSelectVend..ControlBox(True)
Gui.frmSelectVend..MaxButton(True)
Gui.frmSelectVend..MinButton(True)
Gui.frmSelectVend..Moveable(True)
Gui.frmSelectVend..Sizeable(True)
Gui.frmSelectVend..TitleBar(True)
Gui.frmSelectVend..ShowInTaskBar(True)
Gui.frmSelectVend.gsgcLines.Create(GsGridControl)
Gui.frmSelectVend.gsgcLines.Size(14280,2790)
Gui.frmSelectVend.gsgcLines.Position(90,885)
Gui.frmSelectVend.gsgcLines.Event(RowCellClick,gsgcLines_RowCellClick)
Gui.frmSelectVend.gsgcLines.Enabled(True)
Gui.frmSelectVend.gsgcLines.Visible(True)
Gui.frmSelectVend.gsgcLines.Zorder(0)
Gui.frmSelectVend.cmdVendBrw.Create(Button)
Gui.frmSelectVend.cmdVendBrw.Size(855,375)
Gui.frmSelectVend.cmdVendBrw.Position(2850,210)
Gui.frmSelectVend.cmdVendBrw.Caption("^")
Gui.frmSelectVend.cmdVendBrw.Event(Click,cmdVendBrw_Click)
Gui.frmSelectVend.cmdVendBrw.Enabled(True)
Gui.frmSelectVend.cmdVendBrw.Visible(True)
Gui.frmSelectVend.cmdVendBrw.Zorder(0)
Gui.frmSelectVend.cmdVendBrw.FontName("Tahoma")
Gui.frmSelectVend.cmdVendBrw.FontSize(8.25)
Gui.frmSelectVend.cmdNewPO.Create(Button)
Gui.frmSelectVend.cmdNewPO.Size(1500,375)
Gui.frmSelectVend.cmdNewPO.Position(105,3780)
Gui.frmSelectVend.cmdNewPO.Caption("Create PO")
Gui.frmSelectVend.cmdNewPO.Event(Click,cmdNewPO_Click)
Gui.frmSelectVend.cmdNewPO.Enabled(True)
Gui.frmSelectVend.cmdNewPO.Visible(True)
Gui.frmSelectVend.cmdNewPO.Zorder(0)
Gui.frmSelectVend.cmdNewPO.FontName("Tahoma")
Gui.frmSelectVend.cmdNewPO.FontSize(8.25)
Gui.frmSelectVend.txtVendorNo.Create(TextBox,"",True,2640,300,0,105,240,False,0,"Arial",8,-2147483643,1)
Gui.frmSelectVend.chkCopySOExtraDesc.Create(CheckBox)
Gui.frmSelectVend.chkCopySOExtraDesc.Size(2640,360)
Gui.frmSelectVend.chkCopySOExtraDesc.Position(4485,195)
Gui.frmSelectVend.chkCopySOExtraDesc.Caption("Copy SO Extra Description")
Gui.frmSelectVend.chkCopySOExtraDesc.Enabled(True)
Gui.frmSelectVend.chkCopySOExtraDesc.Visible(True)
Gui.frmSelectVend.chkCopySOExtraDesc.Zorder(0)
Gui.frmSelectVend.chkCopySOExtraDesc.FontName("Tahoma")
Gui.frmSelectVend.chkCopySOExtraDesc.FontSize(8.25)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bLoadData.Declare
V.Global.bLongPart.Declare
v.Global.bShipOEPermission.Declare
v.Global.bShipSHIPPermission.Declare
v.Global.bShip.Declare
v.Global.bFileName.Declare
v.Global.sFileName.Declare
V.Global.iPrintAudit.Declare

'Change Scheduling to be forward!!!
Program.External.Include.Library("175100.lib")
Program.External.Include.Library("300011.lib")
Program.External.Include.Library("500030.lib")
Program.Sub.Preflight.End

Program.Sub.Main.Start
	F.Intrinsic.Control.Try
	F.Intrinsic.Control.If(V.Caller.Hook,=,"11560")
		V.Passed.000201.Set("SO/WO Dash.")
	F.Intrinsic.Control.Else
	
		V.Local.sError.Declare	
		V.Local.sIcon.Declare
		V.Local.sGssLogo.Declare
		
		F.Intrinsic.String.Build("{0}\ART\gss2.ico",V.Caller.GlobalDir,v.Local.sIcon)
		Gui.FrmOrderReview..Icon(V.Local.sIcon)
		
		F.ODBC.Connection!con.OpenCompanyConnection(500)
		
		F.Intrinsic.Control.CallSub(SetContextMenus)
		F.Intrinsic.Control.CallSub(CheckLongPart)
		F.Intrinsic.Control.CallSub(CheckPermissions)
		F.Intrinsic.Control.CallSub(checktable)
		
		'Check Print Audit Option
		F.Global.General.ReadOption(400367,3,0000,V.Global.iPrintAudit)
		
		Gui.FrmOrderReview.optView.Value(True)
		GUI.FrmOrderReview.optEdit.Value(True)
	
		F.Intrinsic.Control.CallSub(loaddtall)
		F.Intrinsic.Control.CallSub(Deserialize)
		Gui.FrmOrderReview..Show
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.FrmOrderReview_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.End
	
F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.FrmOrderReview_UnLoad.End

Program.Sub.CheckLongPart.Start
	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
Program.Sub.CheckLongPart.End

Program.Sub.LoadDTAll.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sMark.Declare
	v.Local.sCMarkFile.Declare
	v.Local.sSearch.Declare
	V.Local.sret.Declare
	v.Local.i.Declare
	
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6924_COMPLETION.txt",v.Local.sCMarkFile)
	f.Intrinsic.File.File2String(v.Local.sCMarkFile,v.Local.sMark)
	
	Gui.FrmOrderReview.progressBar1.Value(0)
	Gui.FrmOrderReview.progressBar1.Visible(True)

	F.Intrinsic.Control.If(V.DataTable.dtAll.Exists)
		F.Data.DataTable.Close("dtAll")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtMulti.Exists)
		f.Data.DataTable.Close("dtMulti")
	F.Intrinsic.Control.EndIf
	
	V.Global.bLoadData.Set(True)

	F.Data.DataTable.CreateFromSQL("dtAll","con","Select CONVERT(0,SQL_BIT) as 'ScheduleWO', '' as 'PrtDocCntrl',   ' ' as 'PartExists', ' ' as 'RtrCompl', ' ' as 'BomCompl', ' ' as 'StatusMsg', A.Date_Order As SOOrderDate, RTrim(B.Name_Customer) As Name_Customer, ' ' AS 'ShipToName', ' ' as 'ShipToAddress1', ' ' as 'ShipToCity', ' ' as 'ShipToState', C.Customer_PO, C.CODE_SORT AS 'CODE_SORT',A.Order_No As SO,Left(A.Record_No,3) As SOLine, a.record_no as 'RecordNo',  RTRIM(A.Part) As SOPart,A.Description, ' ' AS 'ExtraDescription', A.Qty_Ordered As SOQty, A.PRICE, A.EXTENSION, A.UM_ORDER, Case A.Flag_Use_Mqd When 'Y' Then E.Cust_Due_Date Else A.Date_Item_Prom End As SODueDate, CONVERT(0,SQL_INTEGER) as 'QTY_ONHAND',  A.QTY_SHIPPED as ShipQTY, G.Job As WO, G.Suffix, Case G.Date_Due When '1900-01-01' Then Null Else G.Date_Due End As WODueDate, Rtrim(A.User_1) as 'User_1', Rtrim(A.User_2) as 'PO', rtrim(A.User_3) as 'POLine', Case When If(J.Date_Due_Line Is Null,M.Date_Due_Line,J.Date_Due_Line) = '1900-01-01' Then Null Else If(J.Date_Due_Line Is Null,M.Date_Due_Line,J.Date_Due_Line) End As PODueDate, C.Salesperson, rtrim(A.Part) as 'PartFriendly', H.Notes,   A.User_4, CAST(CASE WHEN G.FLAG_WO_PRTD = 'Y' OR G.FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED, CAST(CASE WHEN G.FLAG_WO_RELEASED = 'Y' THEN 1 ELSE 0 END AS BIT) AS RELEASED, '' as 'JobDocCntrl',  CONVERT(0,SQL_BIT) as 'WOCreated',  '' as 'CODE_SOURCE',  concat(G.JOB,G.SUFFIX) as 'JS',   C.ORDER_SORT_2, C.AREA, RTrim(D.Name) As SPName,A.Line_Type As SOType,A.Location As SOLoc, A.Product_Line, Cast(Case A.Flag_Use_Mqd When 'Y' Then 1 Else 0 End As Bit) As SOShipSched,G.Part As WOPart,G.Location As WOLoc,G.Qty_Order As WOQty,Case G.Scheduled_Due_Date When '1900-01-01' Then Null Else G.Scheduled_Due_Date End As WOSchedDate, Cast(Case G.Date_Closed When '1900-01-01' Then 0 Else 1 End As Bit) As WOClsd,If(J.Part Is Null,M.Part,J.Part) As POPart,If(J.Location Is Null,M.Location,J.Location) As POLoc,ifnull(If(J.Qty_Order Is Null,M.Qty_Order,J.Qty_Order),0) As POQty,  Cast(Case When If(J.Flag_Recv_Close Is Null,M.Flag_Recv_Close,J.Flag_Recv_Close) = 'Y' Then 1 When If(K.Flag_Recv_Closed Is Null,N.Flag_Recv_Closed,K.Flag_Recv_Closed) = 'Y' Then 1 Else 0 End As Bit) As POClsd,'' As POType,'' As Status, A.User_5, rtrim(A.Part) as 'GSSPart',A.Customer,Case A.Flag_Use_Mqd When 'Y' Then E.Qty_Open Else A.Qty_BO End As SOBOQty,RTRIM(A.FLAG_COGS) AS FLAG_COGS,A.INFO_1,A.INFO_2,A.CUSTOMER_PART From V_Order_Lines A Left Join V_Customer_Master B On A.Customer = B.Customer Left Join V_Order_Header C On A.Order_No = C.Order_No Left Join V_Salespersons D On C.Salesperson = D.ID Left Join V_OE_Ship_Sched E On A.Order_No = E.Order_No And A.Record_No = E.Order_Line And E.Flag_Closed <> 'Y' Left Join V_Order_To_WO F On A.Order_No = F.Order_No And A.Record_No = F.Order_Line Left Join V_Job_Header G On F.Job = G.Job And F.Suffix = G.Suffix Left Join Gab_4167_SO_Notes H On A.Order_No = H.SO And A.Record_No = Concat(H.SOLINE,0) Left Join V_Sales_Ord_Com I On A.Order_No = I.Order_No And A.Record_No = I.Order_Line Left Join V_PO_Lines J On A.USER_2 = J.PURCHASE_ORDER  And A.USER_3 = J.RECORD_NO Left Join V_PO_Header K On A.USER_2 = K.Purchase_Order Left Join V_PO_Drop_Ship L On A.Order_No = L.Order_No And A.Record_No = L.Order_Line Left Join V_PO_Lines M On L.PO = M.Purchase_Order And L.PO_Line = M.Record_No Left Join V_PO_Header N On M.Purchase_Order = N.Purchase_Order Where SOBOQty >= 0 Order By A.Date_Item_Prom;",True)
		
	f.Data.DataTable.CreateFromSQL("dtMulti","con","SELECT * FROM JOB_MULT_PARTS_LN",true)
	
	'Fill in PO Type
	F.Data.DataTable.AddExpressionColumn("dtAll","POKey",String,"PO+POLine")
	f.Intrinsic.Control.If(v.Global.bLongPart)
		F.Data.DataTable.AddDisplayPartColumn("dtAll",0,"SOPart","DISPLAY_PART")
		F.Data.DataTable.CopyColumn("dtAll","Display_part","PartFriendly")
		F.Data.DataTable.CopyColumn("dtAll","Display_part","SOPart")
		F.Data.DataTable.CopyColumn("dtAll","Display_part","WOPart")
	f.Intrinsic.Control.Else
		F.Data.DataTable.AddDisplayPartColumn("dtAll",0,"SOPart","DISPLAY_PART")
	f.Intrinsic.Control.EndIf
	
	'Ship to Name
	f.Data.Dictionary.CreateFromSQL("dShpNme","con","select ORDER_NO AS 'SO', NAME_CUSTOMER_SHIP AS 'ShipToName' from V_ORDER_SHIP_TO")
	f.Data.Dictionary.SetDefaultReturn("dShpNme","")
	f.Data.DataTable.FillFromDictionary("dtAll","dShpNme","SO","ShipToName")
	F.Data.Dictionary.Close("dShpNme")
	
	'Ship to Address 1
	f.Data.Dictionary.CreateFromSQL("dShpNme","con","select ORDER_NO AS 'SO', ADDRESS_1_SHIP AS 'ShipToAddress1' from V_ORDER_SHIP_TO")
	f.Data.Dictionary.SetDefaultReturn("dShpNme","")
	f.Data.DataTable.FillFromDictionary("dtAll","dShpNme","SO","ShipToAddress1")
	F.Data.Dictionary.Close("dShpNme")
	
	'Ship to City
	f.Data.Dictionary.CreateFromSQL("dShpNme","con","select ORDER_NO AS 'SO', CITY_SHIP AS 'ShipToCity' from V_ORDER_SHIP_TO")
	f.Data.Dictionary.SetDefaultReturn("dShpNme","")
	f.Data.DataTable.FillFromDictionary("dtAll","dShpNme","SO","ShipToCity")
	F.Data.Dictionary.Close("dShpNme")
	
	'Added column for 6924
	'Ship to State
	f.Data.Dictionary.CreateFromSQL("dShpNme","con","select ORDER_NO AS 'SO', STATE_SHIP AS 'ShipToState' from V_ORDER_SHIP_TO")
	f.Data.Dictionary.SetDefaultReturn("dShpNme","")
	f.Data.DataTable.FillFromDictionary("dtAll","dShpNme","SO","ShipToState")
	F.Data.Dictionary.Close("dShpNme")
	
	'Extra Description
	F.Data.DataTable.AddExpressionColumn("dtAll","SOKey",String,"SO+RecordNo")
	f.Data.Dictionary.CreateFromSQL("dExt","con","select concat(ORDER_NUM,ORDER_LINE) AS 'SOKEY', TEXT AS 'ExtraDescription' from ORDER_LN_TEXT where ORDER_TYPE='9999'")
	f.Data.Dictionary.SetDefaultReturn("dExt","")
	f.Data.DataTable.FillFromDictionary("dtAll","dExt","SOKey","ExtraDescription")
	F.Data.Dictionary.Close("dExt")
	
	'Source code
	f.Data.Dictionary.CreateFromSQL("dSrc","con","SELECT rtrim(PART), if(CODE_SOURCE='P','PS',IF(CODE_SOURCE='J','PJ',IF(CODE_SOURCE='F','MJ',IF(CODE_SOURCE='M','MS','')))) AS 'CODE_SOURCE' FROM V_INVENTORY_MST2")
	f.Data.Dictionary.SetDefaultReturn("dSrc","")
	f.Data.DataTable.FillFromDictionary("dtAll","dSRC","GSSPART","CODE_SOURCE")
	F.Data.Dictionary.Close("dSrc")
	
	'Part Exists
	f.Data.Dictionary.CreateFromSQL("dINVE","con","SELECT rtrim(PART) as 'Part', CONVERT(1,SQL_BIT) as 'Exists' FROM V_INVENTORY_MSTR")
	f.Data.Dictionary.SetDefaultReturn("dINVE","")
	f.Data.DataTable.FillFromDictionary("dtAll","dINVE","GSSPART","PartExists")
	f.Data.Dictionary.Close("dINVE")
	
	'Part Onhand quantity
	f.Data.Dictionary.CreateFromSQL("dInv","con","SELECT rtrim(PART) as 'Part', QTY_ONHAND FROM V_INVENTORY_MSTR")
	F.Data.Dictionary.SetDefaultReturn("dInv","0")
	f.Data.DataTable.FillFromDictionary("dtAll","dInv","GSSPART","QTY_ONHAND")
	f.Data.Dictionary.Close("dInv")
	
	'Router Complete, need to be on 2017.1
	F.Data.Dictionary.CreateFromSQL("dRtrCompl","con","Select rtrim(Rtr_Num) as 'Rtr-Num',Complete From V_Router_Supp_Hdr Where Complete = 1;")
	F.Data.Dictionary.SetDefaultReturn("dRtrCompl","")
	F.Data.DataTable.FillFromDictionary("dtAll","dRtrCompl","GSSPART","RtrCompl")
	F.Data.Dictionary.Close("dRtrCompl")
	
	'Bom Complete
	F.Data.Dictionary.CreateFromSQL("dBomCompl","con","Select rtrim(Parent) as 'Parent',Cast(1 As Bit) As Bom_Compl From V_Bom_Mstr Where Sequence_Bom = '0000' And Bom_Complete = 'Y';")
	F.Data.Dictionary.SetDefaultReturn("dBomCompl","")
	F.Data.DataTable.FillFromDictionary("dtAll","dBomCompl","GSSPART","BomCompl")
	F.Data.Dictionary.Close("dBomCompl")
	
	'Doc control for part
	F.Data.DataTable.SetValue("dtAll",-1,"PrtDocCntrl","DCS-OFF")
	F.Data.Dictionary.CreateFromSQL("dDCC","con","Select rtrim(ID) As Part,'DCS-ON' As DCC From Link_Data Where Type = '00030'")
	F.Data.Dictionary.SetDefaultReturn("dDCC","DCS-OFF")
	F.Data.DataTable.FillFromDictionary("dtAll","dDCC","GSSPart","PrtDocCntrl")
	F.Data.Dictionary.Close("dDCC")
	
	'Doc control for Job
	F.Data.DataTable.SetValue("dtAll",-1,"JobDocCntrl","DCS-OFF")
	F.Data.Dictionary.CreateFromSQL("dDCC","con","Select RTRIM(ID) As Part,'DCS-ON' As DCC From Link_Data Where Type = '00020'")
	F.Data.Dictionary.SetDefaultReturn("dDCC","DCS-OFF")
	F.Data.DataTable.FillFromDictionary("dtAll","dDCC","JS","JobDocCntrl")
	F.Data.Dictionary.Close("dDCC")
	 
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		'Check if there are multi part work orders out there
		f.Intrinsic.String.Build("SO='{0}' AND SO_LINE='{1}0'",v.DataTable.dtAll(v.Local.i).SO!FIELDVALTRIM,V.DataTable.dtAll(v.Local.i).SOLINE!FIELDVALTRIM,v.Local.sSearch)
		f.Data.DataTable.Select("dtMulti",v.Local.sSearch,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
			f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.UBound,>,0)
				f.Data.DataTable.SetValue("dtAll",v.Local.i,"WO","MULTI")
				f.Data.DataTable.SetValue("dtAll",v.Local.i,"SUFFIX","CHK")
				f.Data.DataTable.SetValue("dtAll",v.Local.i,"WOQTY","1")
			F.Intrinsic.Control.Else
				f.Data.DataTable.SetValue("dtAll",v.Local.i,"WO",v.DataTable.dtMulti(v.Local.sret(0)).WO!FIELDVALTRIM)
				f.Data.DataTable.SetValue("dtAll",v.Local.i,"SUFFIX",v.DataTable.dtMulti(v.Local.sret(0)).WO_SUFFIX!FIELDVALTRIM)
				f.Data.DataTable.SetValue("dtAll",v.Local.i,"WOQTY",v.DataTable.dtMulti(v.Local.sret(0)).QTY!FIELDVALTRIM)
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Update the fields with checkmarks
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).PartExists!fieldvaltrim,=,"True")
			f.Data.DataTable.SetValue("dtAll",v.Local.i,"PartExists",v.Local.sMark)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).RtrCompl!fieldvaltrim,=,"True")
			f.Data.DataTable.SetValue("dtAll",v.Local.i,"RtrCompl",v.Local.sMark)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).BomCompl!fieldvaltrim,=,"True")
			f.Data.DataTable.SetValue("dtAll",v.Local.i,"BomCompl",v.Local.sMark)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	

	F.Intrinsic.Control.CallSub(LoadGVAll)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDTAll.End

Program.Sub.LoadGVAll.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sStatus.Declare
	V.Local.sStatus2.Declare
	V.Local.sSelect.Declare
	v.Local.sStatusMSG.Declare
	v.Local.dtempdate.Declare
	v.Local.lret.Declare
	v.Local.lCol.Declare
	
	v.Local.dtempdate.Set("1/1/1900")
	
	Gui.FrmOrderReview.GsGCAllOpen.AddGridViewFromDataTable("gvAll","dtAll")
	Gui.FrmOrderReview.GsGCAllOpen.SuspendLayout()
	Gui.FrmOrderReview.GsGCAllOpen.SetGridViewProperty("gvAll","OptionsViewShowGroupPanel",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetGridViewProperty("gvAll","MultiSelect",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetGridViewProperty("gvAll","AllowSort",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetGridViewProperty("gvAll","AllowFilter",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetGridViewProperty("gvAll","OptionsDetailShowDetailTabs",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetGridViewProperty("gvAll","OptionsViewColumnAutoWidth",False)
	gui.FrmOrderReview.GsGCAllOpen.SetGridviewProperty("gvall","OptionsFindAlwaysVisible",True)
	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","Fixed","Left")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","Fixed","Left")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","Fixed","Left")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","Fixed","Left")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","Fixed","Left")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","Fixed","Left")
	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","Visible",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","Visible",False)
'	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","Visible",False)
'	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","DISPLAY_PART","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","GSSPart","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLOC","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","Visible",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","Visible",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","Visible",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","Visible",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRINTED","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RELEASED","Visible",False)
	'Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PROC","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOCreated","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POKEY","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JS","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RECORDNO","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOKEY","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPNAME","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","Visible",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","Visible",False)
	
	gui.FrmOrderReview.GsGCAllOpen.ColumnEdit("gvAll","Printed","EditorButton","Print")
	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","Caption","Customer")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Name_Customer","Caption","Customer Name")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer_PO","Caption","Customer PO")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","Caption","SO")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLine","Caption","SO Line")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","Caption","Salesperson")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPName","Caption","SP Name")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","Caption","SO Type")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","Caption","SO Part")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","Caption","SO Loc")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","Caption","PL")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Description","Caption","Description")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","Caption","SO Qty")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","Caption","SO BO Qty")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","Caption","SO Entered")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","Caption","SO Due Date")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","Caption","SO Ship Sched")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","Caption","WO")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Printed","Caption","Print WO")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Released","Caption","Released")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Price","Caption","Price")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Extension","Caption","Extension")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ExtraDescription","Caption","Extra Description")
	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","Caption","Suffix")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","Caption","WO Part")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","Caption","WO Loc")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","Caption","WO Qty")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","Caption","WO Sched Date")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","Caption","WO Due Date")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","Caption","WO Clsd")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","Caption","PO")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","Caption","PO Line")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","Caption","PO Part")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","Caption","PO Loc")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","Caption","PO Qty")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","Caption","PO Due Date")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","Caption","PO Clsd")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","Caption","PO Type")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","Caption","Code")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","Caption","Notes")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","Caption","User 1")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","Caption","User 4")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","Caption","User 5")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","Caption","Rtr")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","Caption","Bom")	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartFriendly","Caption","Part Friendly")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","Caption","Select")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOCreated","Caption","Proc.")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Description","Caption","SO Line Description")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SORT","Caption","SO Description")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","Caption","Description 2")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","Caption","Source")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","Caption","QOH")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","Caption","Part")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","Caption","UM SO")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQTY","Caption","Shipped")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","Caption","Status")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToName","Caption","Ship To Name")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToCity","Caption","Ship To City")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToAddress1","Caption","Ship to Address 1")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","Caption","COGS")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","Caption","Info_1")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","Caption","Info_2")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","Caption","Customer Part")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","Caption","Ship To State")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","Caption","Area")
	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","MinWidth","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","Width","125")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","MinWidth","125")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","Width","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Name_Customer","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Name_Customer","Width","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer_PO","MinWidth","120")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer_PO","Width","120")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLine","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPName","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","Width","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Description","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","MinWidth","55")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","MinWidth","95")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","MinWidth","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","Width","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","MinWidth","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","Width","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","MinWidth","40")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartFriendly","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOCreated","MinWidth","45")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOCreated","Width","45")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SORT","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","MinWidth","75")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","MinWidth","65")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQty","Width","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQty","MinWidth","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","MinWidth","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","Width","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Printed","MinWidth","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Printed","Width","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Released","MinWidth","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Released","Width","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","MinWidth","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","Width","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","MinWidth","75")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","Width","75")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ExtraDescription","Width","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ExtraDescription","MinWidth","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToName","Width","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToName","MinWidth","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToCity","Width","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToCity","MinWidth","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToAddress1","Width","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToAddress1","MinWidth","175")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","MinWidth","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","Width","50")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","MinWidth","200")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","MinWidth","150")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","MinWidth","125")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","MinWidth","100")

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Name_Customer","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer_PO","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLine","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPName","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Description","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","AllowEdit",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","AllowEdit",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","AllowEdit",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","AllowEdit",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","AllowEdit",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","AllowEdit",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SORT","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Released","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Printed","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRICE","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","EXTENSION","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ExtraDescription","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToName","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToCity","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToAddress1","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","AllowEdit",False)

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SORT","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Printed","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Released","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRICE","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","EXTENSION","ReadOnly",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ExtraDescription","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToName","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToCity","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToAddress1","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","ReadOnly",True)	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","ReadOnly",True)

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Name_Customer","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer_PO","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLine","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPName","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Description","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartFriendly","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOCreated","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SORT","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQTY","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RELEASED","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRINTED","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRICE","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","EXTENSION","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ExtraDescription","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToName","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToCity","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToAddress1","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","HeaderFontBold",True)

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Name_Customer","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer_PO","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLine","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPName","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Description","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ScheduleWO","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartFriendly","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOCreated","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SORT","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ORDER_SORT_2","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CODE_SOURCE","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQty","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Printed","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Released","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","StatusMsg","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRICE","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","EXTENSION","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","HeaderHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","HeaderHAlignment","Center")

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Customer","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLine","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Salesperson","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SPName","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOType","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Product_Line","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOClsd","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POClsd","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POType","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Status","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RtrCompl","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","BomCompl","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Code_source","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PartExists","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRINTED","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","RELEASED","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","UM_ORDER","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQty","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","FLAG_COGS","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_1","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","INFO_2","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","CUSTOMER_PART","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipToState","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","AREA","CellHAlignment","Center")

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SO","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOPart","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOLoc","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WO","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Suffix","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOPart","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOLoc","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PO","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLine","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POPart","CellForeColor","Blue")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POLoc","CellForeColor","Blue")
	
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","Notes","CellBackColor","LightYellow")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_1","CellBackColor","LightYellow")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_4","CellBackColor","LightYellow")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","User_5","CellBackColor","LightYellow")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","CellBackColor","LightYellow")

	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOOrderDate","DisplayCustomDatetime","d")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SODueDate","DisplayCustomDatetime","d")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOShipSched","DisplayCustomDatetime","d")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOSchedDate","DisplayCustomDatetime","d")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WODueDate","DisplayCustomDatetime","d")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PODueDate","DisplayCustomDatetime","d")
	
	'1-18-22 - BS - removed $ symbols from amount columns to make compatible for international use
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PRICE","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","EXTENSION","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOQty","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","SOBOQty","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","QTY_ONHAND","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","WOQty","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","POQty","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","ShipQty","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.FrmOrderReview.GsGCAllOpen.AddSummaryItem("GVALL","EXTENSION","SUM_EXTENSION","Sum","","","n")
	
	GUI.FrmOrderReview.GsGCAllOpen.GetColumnIndexByName("gvall","RtrCompl",v.Local.lCol)
	
	'Part Document Control
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","Icon","DCS-OFF")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","Caption","Part Doc")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","MinWidth","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","Width","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","PrtDocCntrl","Visible",True)
'	F.Data.DataTable.Select("dtAll","PrtDocCntrl = 'DCS-ON'",V.Local.sSelect)
'	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
'		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
'		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
'			gui.FrmOrderReview.GsGCAllOpen.GetColumnIndexByName("gvall","PrtDocCntrl",v.Local.lret)
'			Gui.FrmOrderReview.GsGCAllOpen.SetCellAppearance("gvAll",v.Local.lret,V.Local.sSelect(V.Local.iCnt),"Icon","DCS-ON")
'		F.Intrinsic.Control.Next(V.Local.iCnt)
'	F.Intrinsic.Control.EndIf
	
	'Job Document Control
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","CellHAlignment","Center")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","HeaderFontBold",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","Icon","DCS-OFF")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","AllowEdit",False)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","Caption","Job Doc")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","ReadOnly",True)
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","MinWidth","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","Width","35")
	Gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvAll","JobDocCntrl","Visible",False)
'	F.Data.DataTable.Select("dtAll","JobDocCntrl = 'DCS-ON'",V.Local.sSelect)
'	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
'		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
'		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
'			gui.FrmOrderReview.GsGCAllOpen.GetColumnIndexByName("gvall","JobDocCntrl",v.Local.lret)
'			Gui.FrmOrderReview.GsGCAllOpen.SetCellAppearance("gvAll",v.Local.lret,V.Local.sSelect(V.Local.iCnt),"Icon","DCS-ON")
'		F.Intrinsic.Control.Next(V.Local.iCnt)
'	F.Intrinsic.Control.EndIf
	
	
	gui.FrmOrderReview.GsGCAllOpen.GetColumnIndexByName("gvall","StatusMsg",v.Local.lCol)
	Gui.FrmOrderReview.progressBar1.Min(0)
	Gui.FrmOrderReview.progressBar1.Max(V.DataTable.dtAll.RowCount)
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAll.RowCount--,1)
		Gui.FrmOrderReview.progressBar1.Value(V.Local.iCnt)
		V.Local.sStatus.Set("")
		F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).WO!FieldValTrim,=,"")
		F.Intrinsic.Control.AndIf(V.DataTable.dtAll(V.Local.iCnt).PO!FieldValTrim,=,"")
			V.Local.sStatus.Set("1")
			v.Local.sStatusMSG.Set("No WO/PO")
		F.Intrinsic.Control.ElseIf(V.DataTable.dtAll(V.Local.iCnt).WO!FieldValTrim,<>,"")
		F.Intrinsic.Control.AndIf(V.DataTable.dtAll(V.Local.iCnt).PO!FieldValTrim,=,"")
			'Part
			F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).SOPart!FieldValTrim,<>,V.DataTable.dtAll(V.Local.iCnt).WOPart!FieldValTrim)
			F.Intrinsic.Control.AndIf(V.DataTable.dtAll(V.Local.iCnt).SOLoc!FieldValTrim,<>,V.DataTable.dtAll(V.Local.iCnt).WOLoc!FieldValTrim)
				V.Local.sStatus.Set("2")
				v.Local.sStatusMSG.Set("Part Mismatch")
			F.Intrinsic.Control.EndIf
			'Due Date
			f.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).WODueDate!FieldVal,=,"")
				f.Data.DataTable.SetValue("dtall",v.Local.iCnt,"WODueDate",v.Local.dtempdate)
			f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).SODueDate!FieldVal,<,V.DataTable.dtAll(V.Local.iCnt).WODueDate!FieldVal)
				F.Intrinsic.Control.If(V.Local.sStatus,=,"")
					V.Local.sStatus.Set("3")
					v.Local.sStatusMSG.Set("Date Mismatch")
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}*!*3",V.Local.sStatus,V.Local.sStatus)
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.EndIf
			'Qty
			F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).SOQty!FieldVal,<>,V.DataTable.dtAll(V.Local.iCnt).WOQty!FieldVal)
				F.Intrinsic.Control.If(V.Local.sStatus,=,"")
					V.Local.sStatus.Set("4")
					v.Local.sStatusMSG.Set("Qty Mismatch")
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}*!*4",V.Local.sStatus,V.Local.sStatus)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			'No Issues
			F.Intrinsic.Control.If(V.Local.sStatus,=,"")
				V.Local.sStatus.Set("0")
				v.Local.sStatusMSG.Set("No Issues")
			F.Intrinsic.Control.Else
				'Multiple Issues
				F.Intrinsic.String.Split(V.Local.sStatus,"*!*",V.Local.sStatus2)
				F.Intrinsic.Control.If(V.Local.sStatus2.UBound,>,0)
					v.Local.sStatusMSG.Set("Multi Issue")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.ElseIf(V.DataTable.dtAll(V.Local.iCnt).WO!FieldValTrim,=,"")
		F.Intrinsic.Control.AndIf(V.DataTable.dtAll(V.Local.iCnt).PO!FieldValTrim,<>,"")
			'Part
			F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).SOPart!FieldValTrim,<>,V.DataTable.dtAll(V.Local.iCnt).POPart!FieldValTrim)
			F.Intrinsic.Control.AndIf(V.DataTable.dtAll(V.Local.iCnt).SOLoc!FieldValTrim,<>,V.DataTable.dtAll(V.Local.iCnt).POLoc!FieldValTrim)
				V.Local.sStatus.Set("2")
				v.Local.sStatusMSG.Set("Part Mismatch")
			F.Intrinsic.Control.EndIf
			'Due Date
			F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).PODueDate!FieldValTRIM,<>,"")
				F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).SODueDate!FieldVal,<,V.DataTable.dtAll(V.Local.iCnt).PODueDate!FieldVal)
					F.Intrinsic.Control.If(V.Local.sStatus,=,"")
						V.Local.sStatus.Set("3")
						v.Local.sStatusMSG.Set("Date Mismatch")
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("{0}*!*3",V.Local.sStatus,V.Local.sStatus)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			'Qty
			F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).SOQty!FieldVal,<>,V.DataTable.dtAll(V.Local.iCnt).POQty!FieldVal)
				F.Intrinsic.Control.If(V.Local.sStatus,=,"")
					V.Local.sStatus.Set("4")
					v.Local.sStatusMSG.Set("Qty Mismatch")
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}*!*4",V.Local.sStatus,V.Local.sStatus)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			'No Issues
			F.Intrinsic.Control.If(V.Local.sStatus,=,"")
				V.Local.sStatus.Set("0")
				v.Local.sStatusMSG.Set("No Issues")
			F.Intrinsic.Control.Else
				'Multiple Issues
				F.Intrinsic.String.Split(V.Local.sStatus,"*!*",V.Local.sStatus2)
				F.Intrinsic.Control.If(V.Local.sStatus2.UBound,>,0)
					v.Local.sStatusMSG.Set("Multi Issue")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		'Shipped > SO QTY trumps all
		f.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).ShipQty!FieldVal,>=,V.DataTable.dtAll(V.Local.iCnt).SOQty!FieldVal)
			v.Local.sStatus.Set("5")
			v.Local.sStatusMSG.Set("Ready to Invoice")
		f.Intrinsic.Control.EndIf
		F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"Status",V.Local.sStatus)
		f.Data.DataTable.SetValue("dtall",v.Local.iCnt,"StatusMsg",V.Local.sStatusMSG)

	F.Intrinsic.Control.Next(V.Local.iCnt)

	gui.FrmOrderReview.GsGCAllOpen.SetColumnProperty("gvall","StatusMsg","CellHAlignment","Center")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvAll","StatusMsg","TAGNAME1","Equal","No WO/PO")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","StatusMsg","TAGNAME1","BackColor","White")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvAll","StatusMsg","TAGNAME2","Equal","Qty Mismatch")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","StatusMsg","TAGNAME2","BackColor","LightPink")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvAll","StatusMsg","TAGNAME3","Equal","No Issues")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","StatusMsg","TAGNAME3","BackColor","LightGreen")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvAll","StatusMsg","TAGNAME4","Equal","Date Mismatch")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","StatusMsg","TAGNAME4","BackColor","Plum")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvAll","StatusMsg","TAGNAME5","Equal","Ready to Invoice")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","StatusMsg","TAGNAME5","BackColor","LightBlue")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvAll","StatusMsg","TAGNAME6","Equal","Multi Issue")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","StatusMsg","TAGNAME6","BackColor","Red")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvall","PrtDocCntrl","TAGNAME7","Equal","DCS-ON")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","PrtDocCntrl","TAGNAME7","BackColor","GreenYellow")
	
	gui.FrmOrderReview.GsGCAllOpen.AddStyleFormatCondition("gvall","JobDocCntrl","TAGNAME8","Equal","DCS-ON")
	gui.FrmOrderReview.GsGCAllOpen.SetStyleFormatConditionProperty("gvAll","JobDocCntrl","TAGNAME8","BackColor","GreenYellow")
	
	Gui.FrmOrderReview.GsGCAllOpen.ResumeLayout()
	Gui.FrmOrderReview.GsGCAllOpen.MainView("gvAll")
	gui.FrmOrderReview.progressBar1.Value(0)
	gui.FrmOrderReview.progressBar1.Visible(false)
	'gui.FrmOrderReview.lblStatus.Visible(false)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGVAll.End

Program.Sub.cmdRefresh_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(loaddtall)
	F.Intrinsic.Control.CallSub(Deserialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.GsGCAllOpen_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.sJob.Declare
	V.Local.sSO.Declare
	V.Local.sSOLine.Declare
	V.Local.sWO.Declare
	V.Local.sSuffix.Declare
	V.Local.sPO.Declare
	V.Local.sPOLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	v.Local.sShortRet.declare
	v.Local.sLinkID.Declare
	v.Local.sMsg.Declare
	v.Local.sGSSPart.Declare
	v.Local.sPartRev.Declare
	
	V.Local.iRet.Declare
	v.Local.iPID.Declare
	v.Local.bEdit.Declare
	V.Local.bRel.Declare
	v.Local.lRet.Declare
	v.Local.iRefID.Declare
	v.Local.iLinkID.Declare
	
	F.Global.Security.CheckUserAccessIPM(136,2,v.Global.bShipOEPermission)	
	F.Global.Security.CheckUserAccessIPM(661,2,v.Global.bShipSHIPPermission)
	
	F.Intrinsic.Control.SelectCase(V.Args.column)
			
		F.Intrinsic.Control.CaseAny("Released","RELEASED")
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","WO",V.Args.RowIndex,V.Local.sJob)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuffix)
			F.Intrinsic.Control.If(V.Args.CellValue,=,"False")
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				Gui.FrmOrderReview.GsGCAllOpen.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				Gui.FrmOrderReview.GsGCAllOpen.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("Printed","PRINTED","Print","PRINT")
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","WO",V.Args.RowIndex,v.Local.sJob)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuffix)
			'F.Intrinsic.Control.If(V.Args.CellValue,=,"False")
				'Gui.FrmOrderReview.GsGCAllOpen.SetCellValueByColumnName("gvAll","PRINTED",V.Args.RowIndex,true)
				f.Intrinsic.Control.If(v.Local.sJob.Trim,<>,"")
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = 'Y' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuffix,V.Local.sParams)
					F.Global.General.CallWrapperSync(900100,V.Local.sParams)
				f.Intrinsic.Control.Else
					f.Intrinsic.UI.Msgbox("No work order for the selected line")
				f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.caseany("PrtDocCntrl","PRTDOCCONTROL")
			V.Local.sPart.Set(V.DataTable.dtAll(V.Args.RowIndex).GSSPart!FieldValTRIM)
			f.Global.DocumentControl.GetLinkID(v.Local.sPart.Trim,30,v.Local.iRefID)
			f.Intrinsic.Control.If(v.Local.irefid,=,-1)
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT MAX(LINK_ID) AS 'LinkID' FROM LINK_DATA",v.Local.sLinkID)
				f.Intrinsic.Math.ConvertToLong(v.Local.sLinkID,v.Local.iLinkID)
				f.Intrinsic.Math.Add(v.Local.iLinkID,1,v.Local.iLinkID)
				f.Intrinsic.string.LPad(v.Local.iLinkID,"0",9,v.Local.sLinkID)
				'f.Intrinsic.String.Build("INSERT INTO LINK_DATA (LINK_ID,TYPE,ID) VALUES('{0}','{1}','{2}')",v.Local.sLinkID,"00030",v.Local.spart,v.Local.ssql)
				'f.ODBC.Connection!con.execute(v.Local.ssql)
				V.Local.iRefID.Set(v.Local.iLinkID)
				F.Global.DocumentControl.CreateReference(V.Local.sPart,"00030",V.Local.iRefID)
			f.Intrinsic.Control.EndIf
			F.Global.DocumentControl.Invoke(V.Local.sPart,30,"(Inventory Master)",V.Local.iPID)
			
		f.Intrinsic.Control.caseany("JobDocCntrl","JOBDOCCONTROL")
			V.Local.sJob.Set(V.DataTable.dtAll(V.Args.RowIndex).JS!FieldValTRIM)
			f.Intrinsic.Control.If(v.Local.sJob.Trim,=,"")
				f.Intrinsic.UI.Msgbox("Work Order not created for this line.")
			f.Intrinsic.Control.Else
				f.Global.DocumentControl.GetLinkID(v.Local.sJob.Trim,30,v.Local.iRefID)
				f.Intrinsic.Control.If(v.Local.irefid,=,-1)
					F.ODBC.Connection!con.ExecuteAndReturn("SELECT MAX(LINK_ID) AS 'LinkID' FROM LINK_DATA",v.Local.sLinkID)
					f.Intrinsic.Math.ConvertToLong(v.Local.sLinkID,v.Local.iLinkID)
					f.Intrinsic.Math.Add(v.Local.iLinkID,1,v.Local.iLinkID)
					f.Intrinsic.string.LPad(v.Local.iLinkID,"0",9,v.Local.sLinkID)
					'f.Intrinsic.String.Build("INSERT INTO LINK_DATA (LINK_ID,TYPE,ID) VALUES('{0}','{1}','{2}')",v.Local.sLinkID,"00020",v.Local.spart,v.Local.ssql)
					'f.ODBC.Connection!con.execute(v.Local.ssql)
					V.Local.iRefID.Set(v.Local.iLinkID)
					F.Global.DocumentControl.CreateReference(V.Local.sJob,"00020",V.Local.iRefID)
				f.Intrinsic.Control.EndIf
				F.Global.DocumentControl.Invoke(V.Local.sJob,20,"(Job Master)",V.Local.iPID)
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("SO")
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SO",V.Args.RowIndex,V.Local.sSO)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SOLINE",V.Args.RowIndex,V.Local.sSOLINE)
			
			F.Intrinsic.Control.If(V.Local.sSO,<>,"")	
				F.Intrinsic.Control.If(V.Screen.FrmOrderReview!optEdit.Value,=,True,"OR",V.Screen.FrmOrderReview!optIssue.Value,=,True,V.Screen.FrmOrderReview!optWipToFG.Value,=,True)				
					Function.Global.Security.CheckUserAccessIPM(132,1,v.Local.bEdit)
					f.Intrinsic.Control.If(v.Local.bEdit)
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sSO,"O","*!*ZDR*!*",V.Local.sParams)
						F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
					f.Intrinsic.Control.Else
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sSO,"V","*!*ZDR*!*",V.Local.sParams)
						F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.ElseIf(v.Screen.FrmOrderReview!optShip.Value,=,True)
					f.Intrinsic.Control.If(v.Global.bShipOEPermission,=,True,or,v.Global.bShipSHIPPermission,=,True)
						f.Intrinsic.String.RPad(v.Local.sSOLine,"0",4,v.Local.sSOLine)
						Gui.FrmOrderReview.GsGCAllOpen.Enabled(False)
						F.Global.Callwrapper.New("ShipOE","Sales.NewShipments")
						F.Global.Callwrapper.SetProperty("ShipOE","OrderNumber",V.Local.sSO)
						F.Global.Callwrapper.SetProperty("ShipOE","OrderLine",V.Local.sSOLine)
						F.Global.CallWrapper.Run("ShipOE")
						Gui.FrmOrderReview.GsGCAllOpen.Enabled(True)
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sSO,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("WO","Suffix","SUFFIX")
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","WO",V.Args.RowIndex,v.Local.sWO)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","Suffix",V.Args.RowIndex,V.Local.sSuffix)
			F.Intrinsic.Control.If(V.Local.sWO,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmOrderReview!optEdit.Value,=,True)
					Function.Global.Security.CheckUserAccessIPM(527,1,v.Local.bEdit)
					f.Intrinsic.Control.If(v.Local.bEdit)
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sWO,V.Local.sSuffix,"O",V.Local.sParams)
						F.Global.General.CallWrapperAsync(2009,V.Local.sParams)
					f.Intrinsic.Control.Else
						F.Intrinsic.String.ConcatCallWrapperArgs("7",V.Local.sWO,V.Local.sSuffix,"A",V.Local.sParams)
						F.Global.General.CallWrapperAsync(450000,V.Local.sParams)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.ElseIf(V.Screen.FrmOrderReview!optIssue.Value,=,True)								
					'F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sWO,V.Local.sSuffix,V.Local.sParams)
					'F.Global.General.CallWrapperSync(450150,V.Local.sParams)
					F.Global.Callwrapper.New("IssueMaterial", "Manufacturing.IssueMaterialToWip")
					F.Global.Callwrapper.SetProperty("IssueMaterial", "WorkOrder", V.Local.sWO)
					F.Global.Callwrapper.SetProperty("IssueMaterial", "Suffix", V.Local.sSuffix)
					F.Global.Callwrapper.Run("IssueMaterial")
					F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
						F.Intrinsic.Control.Case(1)
							F.Global.General.CallWrapperSync(50,"JB0057")
						F.Intrinsic.Control.Case(2)
							'Do Not Print
						F.Intrinsic.Control.Case(3)
							'F.Intrinsic.UI.Msgbox("Print Audit Trail?","Print",4,V.Local.iRet)
							'F.Intrinsic.Control.If(V.Local.iRet,=,6)
								F.Global.General.CallWrapperSync(50,"JB0057")
							'F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndSelect
				F.Intrinsic.Control.ElseIf(V.Screen.FrmOrderReview!optWiptoFG.Value,=,True)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sWO,V.Local.sSuffix,V.Local.sParams)
					F.Global.General.CallWrapperSync(2003,V.Local.sParams)
					F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
						F.Intrinsic.Control.Case(1)
							F.Global.General.CallWrapperSync(50,"JB0057/C")
						F.Intrinsic.Control.Case(2)
							'Do Not Print
						F.Intrinsic.Control.Case(3)
							F.Global.General.CallWrapperSync(50,"JB0057/C")
					F.Intrinsic.Control.EndSelect
				F.Intrinsic.Control.Else
					F.Intrinsic.String.ConcatCallWrapperArgs("7",V.Local.sWO,V.Local.sSuffix,"A",V.Local.sParams)
					F.Global.General.CallWrapperAsync(450000,V.Local.sParams)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("PO","POLine")
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","PO",v.Args.RowIndex,v.Local.sPO)
			F.Intrinsic.Control.If(V.Local.sPO,<>,"")
				F.Intrinsic.Control.If(v.Screen.FrmOrderReview!optEdit.Value,=,True,"OR",v.Screen.FrmOrderReview!optIssue.Value,=,True,v.Screen.FrmOrderReview!optWipToFG.Value,=,True)
					Function.Global.Security.CheckUserAccessIPM(265,1,v.Local.bEdit)
					f.Intrinsic.Control.If(v.Local.bEdit)
						F.Intrinsic.String.ConcatCallWrapperArgs("O",V.Local.sPO,"",V.Local.sParams)
					f.Intrinsic.Control.Else
						F.Intrinsic.String.ConcatCallWrapperArgs("V",V.Local.sPO,"",V.Local.sParams)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.Else
					F.Intrinsic.String.ConcatCallWrapperArgs("V",V.Local.sPO,"",V.Local.sParams)
				F.Intrinsic.Control.EndIf
				F.Global.General.CallWrapperASync(175200,V.Local.sParams)
			F.Intrinsic.Control.EndIf				
		
		F.Intrinsic.Control.CaseAny("SOPart","SOLoc")
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","DISPLAY_PART",V.Args.RowIndex,v.Local.sPart.Trim)
			
			f.Intrinsic.Control.If(v.Global.bLongPart)
				F.Global.Inventory.GetGSSPart(V.Local.sPart.Trim,v.Local.sPartRev.Trim,V.Local.sShortRet)
			f.Intrinsic.Control.Else
				v.Local.sShortRet.Set(v.Local.sPart.Trim)
			f.Intrinsic.Control.EndIf
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SOLoc",V.Args.RowIndex,v.Local.sLoc)
			F.Intrinsic.Control.If(v.Local.sPart,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmOrderReview!optView.Value,=,True)				
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sShortRet.Trim,V.Local.sLoc,"O",V.Local.sParams)
				F.Intrinsic.Control.Else
					Function.Global.Security.CheckUserAccessIPM(371,0,v.Local.bEdit)
					f.Intrinsic.Control.If(v.Local.bEdit)
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sShortRet.Trim,V.Local.sLoc,"M",V.Local.sParams)
					f.Intrinsic.Control.Else
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sShortRet.Trim,V.Local.sLoc,"O",V.Local.sParams)
					f.Intrinsic.Control.EndIf					
				F.Intrinsic.Control.EndIf
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CaseAny("WOPart","WOLoc")			
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","GSSPart",V.Args.RowIndex,v.Local.sPart)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","WOLoc",V.Args.RowIndex,v.Local.sLoc)
			F.Intrinsic.Control.If(v.Local.sPart,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmOrderReview!optView.Value,=,True)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Intrinsic.Control.Else
					Function.Global.Security.CheckUserAccessIPM(371,0,v.Local.bEdit)
					f.Intrinsic.Control.If(v.Local.bEdit)
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					f.Intrinsic.Control.Else
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf
	
		F.Intrinsic.Control.CaseAny("POPart","POLoc")			
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","GSSPart",V.Args.RowIndex,v.Local.sPart)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","POLoc",V.Args.RowIndex,v.Local.sLoc)
			F.Intrinsic.Control.If(v.Local.sPart,<>,"")
				F.Intrinsic.Control.If(V.Screen.FrmOrderReview!optView.Value,=,True)					
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Intrinsic.Control.Else
					Function.Global.Security.CheckUserAccessIPM(371,0,v.Local.bEdit)
					f.Intrinsic.Control.If(v.Local.bEdit)
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					f.Intrinsic.Control.Else
						F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf
'		'Need to figure out this review column function....
'		f.Intrinsic.Control.Case("Review")
'			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","GSSPart",V.Args.RowIndex,v.Local.sPart)
'			f.Intrinsic.String.Build("SELECT * FROM V_BOM_MSTR WHERE PARENT='{0}'",v.Local.sPart.Trim,v.Local.sSQL)
'			f.ODBC.Connection!con.executeandreturn(v.Local.sSQL,v.Local.sRet)
'			f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
'				'f.Global.General.CallWrapperAsync(50,"BM0020GI/O")
'			F.Intrinsic.Control.Else
'				F.Intrinsic.String.ConcatCallWrapperArgs("O",v.Local.sPart,V.Local.sParams)
'				f.Global.General.CallWrapperAsync(400000,v.Local.sParams)
'			f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCAllOpen_RowCellClick.End

Program.Sub.GsGCAllOpen_CellValueChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sOrder.Declare
	V.Local.sSOLine.Declare
	V.Local.sLine.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	V.Local.sParams.Declare
	v.Local.sDate.Declare
	v.Local.sDateLong.Declare
	v.Local.sDateUS.Declare
	v.Local.sdatesched.Declare
	
	v.Local.dDateSched.Declare
	V.Local.dDate.Declare
	
	Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SO",V.Args.RowIndex,V.Local.sOrder)
	Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SOLine",V.Args.RowIndex,V.Local.sLine)
	F.Intrinsic.String.RPad(V.Local.sLine,"0",4,V.Local.sSOLine)
	
	'f.Intrinsic.Debug.ShowCallerInfo
	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.CaseAny("SODueDate","SODUEDATE")
			'Select the row
			f.Data.DataTable.SetValue("dtall",v.Args.rowindex,"ScheduleWO",true)
			
			'Update line item due date
			v.Local.ddate.set(V.DataTable.dtAll(v.args.rowindex).SODueDate!FieldValString)
			f.Intrinsic.String.Format(v.Local.ddate,"dd/mm/yyyy",v.Local.sdatesched)
			f.Intrinsic.String.Format(v.Local.ddate,"MMDDYY",v.Local.sdate)
			f.Intrinsic.String.Format(v.Local.ddate,"YYYYMMDD",v.Local.SDATELong)
			F.Intrinsic.String.Format(V.Local.ddate,"DD/MM/YY",V.Local.SDATEUS)
			F.Intrinsic.String.Concat("UPDATE ORDER_LINES SET DATE_ITEM_PROM='",v.Local.SDATELong,"', ITEM_PROMISE_DT='",v.Local.sdate,"' WHERE Order_No='",v.DataTable.dtAll(v.Args.rowindex).SO!fieldvaltrim,"' and Record_No='",v.DataTable.dtAll(v.args.rowindex).SOLine!fieldvaltrim,"0'",V.Local.sSQL)
			F.ODBC.Connection!con.Execute(v.Local.ssql)
						
			'Update line item due date
			v.Local.sJob.Set(v.DataTable.dtAll(v.Args.rowindex).WO!FIELDVALTRIM)
			v.Local.sSuf.Set(v.DataTable.dtAll(v.Args.rowindex).SUFFIX!FIELDVALTRIM)
			f.Intrinsic.String.Format(v.Local.ddate,"MMDDYY",v.Local.sdate)
			F.Intrinsic.String.Concat("UPDATE JOB_HEADER SET DATE_DUE='",v.Local.sdate,"' WHERE JOB='",v.Local.sJob,"' and SUFFIX='",V.Local.sSuf,"'",V.Local.sSQL)
			F.ODBC.Connection!con.Execute(v.Local.ssql)
			
		F.Intrinsic.Control.CaseAny("NOTES","Notes")
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4167_SO_NOTES WHERE SO = '{0}' AND SOLINE = '{1}';",V.Local.sOrder,V.Local.sLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4167_SO_NOTES(SO,SOLINE,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4167_SO_NOTES SET NOTES = '{0}' WHERE SO = '{1}' AND SOLINE = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Args.Value,"GV","gvAll","SO_Note","NOTES")
		
		F.Intrinsic.Control.CaseAny("USER_1","User_1")
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,User_1) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET User_1 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","gvAll","SO_Note","User_1")
			
		F.Intrinsic.Control.CaseAny("USER_4","User_4")
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,USER_4) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_4 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","gvAll","SO_Note","USER_4")
	
		F.Intrinsic.Control.CaseAny("USER_5","User_5")
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,USER_5) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_5 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","gvAll","SO_Note","USER_5")
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCAllOpen_CellValueChanged.End

Program.Sub.CheckTable.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bExists.Declare

	F.ODBC.Connection!con.TableExists("GAB_4167_SO_NOTES",V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists,!=,true)
		F.ODBC.Connection!con.Execute("CREATE TABLE GAB_4167_SO_NOTES(SO CHAR(7),SOLINE CHAR(3),NOTES LONGVARCHAR);")
		F.ODBC.Connection!con.Execute("CREATE INDEX GAB_4167_SO_NOTES01 USING 1 ON GAB_4167_SO_NOTES(SO);")
		F.ODBC.Connection!con.Execute("CREATE INDEX GAB_4167_SO_NOTES02 USING 2 ON GAB_4167_SO_NOTES(SOLINE);")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckTable.End

Program.Sub.CheckNote.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSO.Declare
	V.Local.sLine.Declare
	V.Local.iRows.Declare
	V.Local.iCnt.Declare

	F.Intrinsic.Control.If(V.Args.SO_Note,=,"NOTES")

		Gui.FrmOrderReview.GsGCAllOpen.GetRowCount("gvAll",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SOLine",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmOrderReview.GsGCAllOpen.SetCellValueByColumnName("gvAll","NOTES",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.Control.ElseIf(V.Args.SO_Note,=,"USER_4")

		Gui.FrmOrderReview.GsGCAllOpen.GetRowCount("gvAll",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SOLine",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmOrderReview.GsGCAllOpen.SetCellValueByColumnName("gvAll","USER_4",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.Control.ElseIf(V.Args.SO_Note,=,"USER_5")

		Gui.FrmOrderReview.GsGCAllOpen.GetRowCount("gvAll",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmOrderReview.GsGCAllOpen.GetCellValueByColumnName("gvAll","SOLine",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmOrderReview.GsGCAllOpen.SetCellValueByColumnName("gvAll","USER_5",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckNote.End

Program.Sub.CheckPermissions.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.bEditInventory.Declare
	v.Local.bEditWO.Declare
	v.Local.bEditPO.Declare
	v.Local.bEditSO.Declare
	V.Local.bIssueGrp.Declare
	V.Local.bWiptoFG.Declare	
	v.Local.bchecked.Declare
	
	'Check if any of the menu items have edit permissions
	F.Global.Security.CheckUserAccessIPM(371,0,v.Local.bEditInventory)
	F.Global.Security.CheckUserAccessIPM(527,1,v.Local.bEditWO)
	F.Global.Security.CheckUserAccessIPM(265,1,v.Local.bEditPO)
	F.Global.Security.CheckUserAccessIPM(132,1,v.Local.bEditSO)
	F.Global.Security.CheckUserAccessIPM(136,2,v.Global.bShipOEPermission)
	F.Global.Security.CheckUserAccessIPM(661,2,v.Global.bShipSHIPPermission)
	Gui.FrmOrderReview.optView.Value(True)
	
	F.Intrinsic.Control.If(V.Local.bEditInventory,=,True,or,v.Local.bEditWO,=,True,v.Local.bEditPO,=,True,v.Local.bEditSO,=,True)
		Gui.FrmOrderReview.optEdit.Enabled(True)	
		gui.FrmOrderReview.optEdit.Value(True)
	F.Intrinsic.Control.EndIf

	Function.Global.Security.CheckUserAccessIPM(533,0,v.Local.bIssueGrp)
	F.Intrinsic.Control.If(v.Local.bIssueGrp,=,True)
		Gui.FrmOrderReview.optIssue.Enabled(True)
	F.Intrinsic.Control.EndIf

	Function.Global.Security.CheckUserAccessIPM(544,0,v.Local.bWiptoFG)
	F.Intrinsic.Control.If(v.Local.bWiptoFG,=,True)
		Gui.FrmOrderReview.optWiptoFG.Enabled(True)
	F.Intrinsic.Control.EndIf
	
	'Ship Radio button
	F.Intrinsic.Control.If(V.Global.bShipOEPermission,=,True,OR,v.Global.bShipSHIPPermission,=,True)
		Gui.FrmOrderReview.optShip.Enabled(1)
		V.Global.bShip.Set(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			Gui.FrmOrderReview.optShip.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		Gui.FrmOrderReview.optShip.Enabled(0)
		V.Global.bShip.Set(False)
		Gui.FrmOrderReview.optShip.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckPermissions.End

Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	v.Local.bEditSO.Declare	
	v.Local.bEditWO.Declare
	
	Gui.FrmOrderReview..ContextMenuCreate("ctxAll")
	Gui.FrmOrderReview.GsGCAllOpen.ContextMenuAttach("ctxAll")
	
	Gui.FrmOrderReview..ContextMenuAddItem("ctxAll","ResetColumns",0,"Reset Columns")
	Gui.FrmOrderReview..ContextMenuSetItemEventHandler("ctxAll","ResetColumns","MenuClickResetColumns")

'	Function.Global.Security.CheckUserAccessIPM(132,1,v.Local.bEditSO)
'	f.Intrinsic.Control.If(v.Local.bEditSO)
'		Gui.FrmOrderReview..ContextMenuAddItem("ctxAll","NewSO",0,"New SO")
'		Gui.FrmOrderReview..ContextMenuSetItemEventHandler("ctxAll","NewSO","MenuClickNewSO")
'		Gui.FrmOrderReview..ContextMenuAddItem("ctxPastDue","NewSO",0,"New SO")
'		Gui.FrmOrderReview..ContextMenuSetItemEventHandler("ctxPastDue","NewSO","MenuClickNewSO")
'	f.Intrinsic.Control.EndIf	
'	
'	Function.Global.Security.CheckUserAccessIPM(527,1,v.Local.bEditWO)
'	f.Intrinsic.Control.If(v.Local.bEditWO)
'		Gui.FrmOrderReview..ContextMenuAddItem("ctxAll","NewWO",0,"New WO")
'		Gui.FrmOrderReview..ContextMenuSetItemEventHandler("ctxAll","NewWO","MenuClickNewWO")
'		Gui.FrmOrderReview..ContextMenuAddItem("ctxPastDue","NewWO",0,"New WO")
'		Gui.FrmOrderReview..ContextMenuSetItemEventHandler("ctxPastDue","NewWO","MenuClickNewWO")		
'	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.MenuClickQuickInvOut.Start
f.Intrinsic.Control.Try
	v.Local.sMessage.Declare
	v.Local.sOrder.Declare
	v.Local.i.Declare
	
	f.Intrinsic.Control.If(v.DataTable.dtOrders.Exists)
		f.Data.DataTable.Close("dtOrders")
	f.Intrinsic.Control.EndIf	
	
	f.Data.DataTable.Create("dtOrders","true")
	f.Data.DataTable.AddColumn("dtOrders","SO","String")
	
	'Create the message
	f.Intrinsic.String.Concat("Invoicing for Sales Orders: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			v.Local.sOrder.Set(v.DataTable.dtAll(v.Local.i).SO!fieldvaltrim)
			f.Intrinsic.String.Concat(v.Local.sMessage," ",v.Local.sOrder," ",v.Ambient.NewLine,V.Local.sMessage)
			f.Data.DataTable.AddRow("dtOrders","SO",v.Local.sOrder)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Run select orders to invoice one shot
	
	'Are you sure? message
	

	
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry
Program.Sub.MenuClickQuickInvOut.End

Program.Sub.MenuClickRefresh.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(false)
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	gui.FrmOrderReview.GsGCAllOpen.enabled(true)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End

Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	
	V.Local.sControl.Set("GsGCAllOpen")

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_6924_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.FrmOrderReview.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_6924_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.FrmOrderReview.[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXALL")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",6924,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Intrinsic.Control.Case("CTXPASTDUE")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVPASTDUE",6924,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
	F.Intrinsic.Control.EndSelect
	
	V.Global.bLoadData.Set(False)
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.MenuClickNewSO.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare
	
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_ORDER_HEADER;",V.Local.iRowCnt)
				
	'gui.FrmOrderReview.tabSO.Enabled(False)
	gui.FrmOrderReview.GsGCAllOpen.enabled(False)
	F.Global.General.CallWrapperSync(200000,"*!*ZDR*!*!*!N!*!*!*ZDR*!*")	
	'gui.FrmOrderReview.tabSO.Enabled(True)
	gui.FrmOrderReview.GsGCAllOpen.enabled(True)

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_ORDER_HEADER;",V.Local.iRowCnt2)

	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)	
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNewSO.End

Program.Sub.MenuClickNewWO.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare
	V.Local.iPID.Declare
	V.Local.bPID.Declare
	
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt)

	'gui.FrmOrderReview.tabSO.Enabled(False)
	gui.FrmOrderReview.GsGCAllOpen.enabled(False)
	F.Global.General.LaunchMenuTask(527,2,V.Local.iPID)
	F.Intrinsic.Task.PIDRunning(V.Local.iPID,V.Local.bPID)
	F.Intrinsic.Control.DoUntil(V.Local.bPID,=,False)
	F.Intrinsic.UI.SleepMS(10)
	F.Intrinsic.Task.PIDRunning(V.Local.iPID,V.Local.bPID)
	F.Intrinsic.Control.Loop
	gui.FrmOrderReview.GsGCAllOpen.enabled(True)
	'gui.FrmOrderReview.tabSO.Enabled(True)

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt2)

	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNewWO.End

Program.Sub.picGSSLogo_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/login-customer","","",0)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'gvAll
	Gui.FrmOrderReview.GsGCAllOpen.Serialize("gvAll",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",6924,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
	F.Intrinsic.Control.Try
		V.Local.sError.Declare
		V.Local.sSerialize.Declare
		
		'Delete old registry records
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",6924,0,5,"",V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
			F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 6924 And Seq < 1000;")
			F.ODBC.Connection!common.Close
		F.Intrinsic.Control.EndIf
	
		'gvAll
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",6924,1000,6,"",V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			Gui.FrmOrderReview.GsGCAllOpen.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.cmdCreateWO_Click.Start
F.Intrinsic.Control.CallSub(cmdBWDSched_Click)
Program.Sub.cmdCreateWO_Click.End

Program.Sub.cmdOpenDoc_Click.Start
f.Intrinsic.Control.Try

	gui.FrmOrderReview.GsGCAllOpen.enabled(False)
	v.Local.i.Declare(long)
	v.Local.j.Declare(long)
	v.Local.k.Declare(long)
	v.Local.ssql.Declare(string)
	v.Local.sjob.Declare(string)
	v.Local.sSuf.Declare(string)
	v.Local.sret.Declare(string)
	v.Local.sPart.Declare(string)
	v.Local.sMessage.Declare(string)
	v.Local.sShortRet.Declare(string)
	v.Local.sTemp.Declare(string)
	v.Local.iLinkID.Declare(long)
	v.Local.lRet.Declare(long)
	
	f.Intrinsic.Control.If(v.DataTable.dtPrint.Exists)
		f.Data.DataTable.Close("dtPrint")
	f.Intrinsic.Control.EndIf	
	
	f.Data.DataTable.Create("dtPrint","true")
	f.Data.DataTable.AddColumn("dtPrint","Part","String")
	f.Data.DataTable.AddColumn("dtPrint","Job","String")
	f.Data.DataTable.AddColumn("dtPrint","Suffix","String")
	
	'Verify if the user wants to do this.
	f.Intrinsic.String.Concat("Open Documents for: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			v.Local.spart.Set(v.DataTable.dtAll(v.Local.i).SOPart!fieldvaltrim)
			f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll(v.Local.i).SOPart!fieldval," --- ",v.DataTable.dtAll(v.Local.i).Description!fieldval,v.Ambient.NewLine,V.Local.sMessage)
			f.Data.DataTable.AddRow("dtPrint","Part",v.Local.spart)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Reset i before continuing on
	v.Local.i.Set(0)
	f.Intrinsic.Control.If(v.DataTable.dtPrint.RowCount,<>,0)
		f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Open Documents?",4,v.Local.lret)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("No valid lines selected.")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.lret,=,6)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPrint.RowCount--,1)
			v.Local.spart.Set(v.DataTable.dtPrint(v.Local.i).Part!fieldvaltrim)		
			F.Global.Inventory.GetGSSPart(V.Local.sPart,"",V.Local.sShortRet)
			F.Global.DocumentControl.CreateReference(v.Local.sShortRet,30,V.Local.iLinkID)
			F.Intrinsic.Control.If(V.Local.iLinkID,>,0)
				'Grab the files
				F.Intrinsic.String.Build("SELECT * FROM ATG_DOC_ASSOC WHERE LINK_ID = {0}",v.Local.iLinkID,v.Local.ssql)
				f.Intrinsic.Control.If(v.DataTable.dtFiles.Exists)
					f.Data.DataTable.Close("dtFiles")
				f.Intrinsic.Control.EndIf
				f.Data.DataTable.CreateFromSQL("dtFiles",con,v.Local.ssql,true)
				
				f.Intrinsic.Control.If(v.DataTable.dtFiles.RowCount,<>,0)
					f.Intrinsic.Control.For(v.Local.k,0,v.DataTable.dtFiles.RowCount--,1)
						
						F.Intrinsic.String.Right(v.DataTable.dtFiles(v.Local.k).PATH!FieldvalTrim,1,V.Local.stemp)
						f.Intrinsic.Control.If(v.Local.sTemp,=,"\")
							F.Intrinsic.String.Concat(v.DataTable.dtFiles(v.Local.k).PATH!FieldvalTrim,v.DataTable.dtFiles(v.Local.k).FILE!FieldvalTrim,V.Local.stemp)
						f.Intrinsic.Control.Else
							F.Intrinsic.String.Concat(v.DataTable.dtFiles(v.Local.k).PATH!FieldvalTrim,"\",v.DataTable.dtFiles(v.Local.k).FILE!FieldvalTrim,V.Local.stemp)
						f.Intrinsic.Control.EndIf
						
						'If it cannot print a document, catch it
						f.Intrinsic.Control.Try
							F.Intrinsic.task.ShellExec(V.Caller.Handle,"OPEN",V.local.sTemp,"","",5)
						f.Intrinsic.Control.Catch
						f.Intrinsic.Control.EndTry
						f.Intrinsic.UI.SleepMS(3000)
					f.Intrinsic.Control.Next(v.Local.k)
				f.Intrinsic.Control.Else
					f.Intrinsic.String.Concat("No documents found for part: ",v.Local.sPart,v.Local.sMessage)
					f.Intrinsic.UI.Msgbox(v.Local.sMessage)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	f.Intrinsic.Control.EndIf
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(True)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub(FrmOrderReview_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.cmdOpenDoc_Click.End

Program.Sub.cmdPrintDoc_Click.Start
f.Intrinsic.Control.Try

	gui.FrmOrderReview.GsGCAllOpen.enabled(False)
	v.Local.i.Declare(long)
	v.Local.j.Declare(long)
	v.Local.k.Declare(long)
	v.Local.ssql.Declare(string)
	v.Local.sjob.Declare(string)
	v.Local.sSuf.Declare(string)
	v.Local.sret.Declare(string)
	v.Local.sPart.Declare(string)
	v.Local.sMessage.Declare(string)
	v.Local.sShortRet.Declare(string)
	v.Local.sTemp.Declare(string)
	v.Local.iLinkID.Declare(long)
	v.Local.lRet.Declare(long)
	
	f.Intrinsic.Control.If(v.DataTable.dtPrint.Exists)
		f.Data.DataTable.Close("dtPrint")
	f.Intrinsic.Control.EndIf	
	
	f.Data.DataTable.Create("dtPrint","true")
	f.Data.DataTable.AddColumn("dtPrint","Part","String")
	f.Data.DataTable.AddColumn("dtPrint","Job","String")
	f.Data.DataTable.AddColumn("dtPrint","Suffix","String")
	
	'Verify if the user wants to do this.
	f.Intrinsic.String.Concat("Print Documents for: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			F.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).CODE_SOURCE!fieldvaltrim,=,"MJ","or",v.DataTable.dtAll(v.Local.i).CODE_SOURCE!fieldvaltrim,=,"MS")
				v.Local.spart.Set(v.DataTable.dtAll(v.Local.i).SOPart!fieldvaltrim)
				v.Local.sJob.Set(v.DataTable.dtAll(v.Local.i).WO!fieldvaltrim)
				v.Local.sSuf.Set(v.DataTable.dtAll(v.Local.i).SUFFIX!FIELDVALTRIM)	
				f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll(v.Local.i).SOPart!fieldval," --- ",v.DataTable.dtAll(v.Local.i).Description!fieldval,v.Ambient.NewLine,V.Local.sMessage)
				f.Data.DataTable.AddRow("dtPrint","Part",v.Local.spart,"Job",v.Local.sJob,"Suffix",v.Local.sSuf)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Reset i before continuing on
	v.Local.i.Set(0)
	f.Intrinsic.Control.If(v.DataTable.dtPrint.RowCount,<>,0)
		f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Print Documents?",4,v.Local.lret)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("No valid lines selected.  Please double check that the source code is Manufactured (M or F).")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.lret,=,6)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPrint.RowCount--,1)
			v.Local.spart.Set(v.DataTable.dtPrint(v.Local.i).Part!fieldvaltrim)
			v.Local.sJob.Set(v.DataTable.dtPrint(v.Local.i).Job!fieldvaltrim)
			v.Local.sSuf.Set(v.DataTable.dtPrint(v.Local.i).Suffix!FIELDVALTRIM)				
			F.Global.Inventory.GetGSSPart(V.Local.sPart,"",V.Local.sShortRet)

			'Grab Ids
			F.Intrinsic.String.Build("Select Part From V_JOB_Header Where Job = '{0}' And Suffix = '{1}'",v.Local.sjob,v.Local.sSuf,V.Local.sSql)
			f.Intrinsic.Control.If(v.DataTable.dtGrab.Exists)
				f.Data.DataTable.Close("dtGrab")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.CreateFromSQL("dtGrab",con,v.Local.ssql,true)
			f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtGrab.RowCount--,1)
				
				F.Global.DocumentControl.CreateReference(v.DataTable.dtGrab(v.Local.j).PART!FIELDVALTRIM,30,V.Local.iLinkID)
				F.Intrinsic.Control.If(V.Local.iLinkID,>,0)
					
					'Grab the files
					F.Intrinsic.String.Build("SELECT * FROM ATG_DOC_ASSOC WHERE LINK_ID = {0}",v.Local.iLinkID,v.Local.ssql)
					f.Intrinsic.Control.If(v.DataTable.dtFiles.Exists)
						f.Data.DataTable.Close("dtFiles")
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.CreateFromSQL("dtFiles",con,v.Local.ssql,true)
					
					f.Intrinsic.Control.If(v.DataTable.dtFiles.RowCount,<>,0)
						f.Intrinsic.Control.For(v.Local.k,0,v.DataTable.dtFiles.RowCount--,1)
							
							F.Intrinsic.String.Right(v.DataTable.dtFiles(v.Local.k).PATH!FieldvalTrim,1,V.Local.stemp)
							f.Intrinsic.Control.If(v.Local.sTemp,=,"\")
								F.Intrinsic.String.Concat(v.DataTable.dtFiles(v.Local.k).PATH!FieldvalTrim,v.DataTable.dtFiles(v.Local.k).FILE!FieldvalTrim,V.Local.stemp)
							f.Intrinsic.Control.Else
								F.Intrinsic.String.Concat(v.DataTable.dtFiles(v.Local.k).PATH!FieldvalTrim,"\",v.DataTable.dtFiles(v.Local.k).FILE!FieldvalTrim,V.Local.stemp)
							f.Intrinsic.Control.EndIf
							
							'If it cannot print a document, catch it
							f.Intrinsic.Control.Try
								F.Intrinsic.task.ShellExec(V.Caller.Handle,"PRINT",V.local.sTemp,"","",5)
							f.Intrinsic.Control.Catch
							f.Intrinsic.Control.EndTry
							f.Intrinsic.UI.SleepMS(3000)
						f.Intrinsic.Control.Next(v.Local.k)
					f.Intrinsic.Control.Else
						f.Intrinsic.String.Concat("No documents found for part: ",v.Local.sPart,v.Local.sMessage)
						f.Intrinsic.UI.Msgbox(v.Local.sMessage)
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.j)
		f.Intrinsic.Control.Next(v.Local.i)
		
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	f.Intrinsic.Control.EndIf
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(True)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub(FrmOrderReview_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.cmdPrintDoc_Click.End

Program.Sub.cmdCreateParts_Click.Start
f.Intrinsic.Control.Try

	gui.FrmOrderReview.GsGCAllOpen.enabled(False)
	v.Local.i.Declare(long)
	v.Local.j.Declare(long)
	v.Local.ssql.Declare(string)
	v.Local.spart.Declare(string)
	v.Local.sUm.Declare(string)
	v.Local.sDescription.Declare(string)
	v.Local.sLoc.Declare(string)
	v.Local.sPL.Declare(string)
	v.Local.sSource.Declare(string)
	v.Local.sMessage.Declare(string)
	v.Local.sShortRet.Declare(string)
	v.Local.sParams.Declare(string)
	v.Local.sLongDesc.Declare(string)
	v.Local.fPrice.Declare(float)
	v.Local.lret.Declare(long)
	
	f.Intrinsic.Control.If(v.DataTable.dtParts.Exists)
		f.Data.DataTable.Close("dtParts")
	f.Intrinsic.Control.EndIf	
	
	f.Data.DataTable.Create("dtParts","true")
	f.Data.DataTable.AddColumn("dtParts","Part","String")
	f.Data.DataTable.AddColumn("dtParts","Desc","String")
	f.Data.DataTable.AddColumn("dtParts","PrdL","String")
	f.Data.DataTable.AddColumn("dtParts","UoMs","String")
	f.Data.DataTable.AddColumn("dtParts","Long","String")
	f.Data.DataTable.AddColumn("dtParts","Prce","Float")
	f.Data.DataTable.AddColumn("dtParts","Orig","Long")
	'Verify if the user wants to do this.
	f.Intrinsic.String.Concat("Create/Maintain Parts for: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			f.Intrinsic.String.Build("select um_order from V_ORDER_LINES where ORDER_NO='{0}' and RECORD_NO='{1}0'",v.DataTable.dtAll(v.Local.i).SO!FIELDVALTRIM,v.DataTable.dtAll(v.Local.i).SOLine!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sUm)
			f.Intrinsic.String.Build("select price_order from V_ORDER_LINES where ORDER_NO='{0}' and RECORD_NO='{1}0'",v.DataTable.dtAll(v.Local.i).SO!FIELDVALTRIM,v.DataTable.dtAll(v.Local.i).SOLine!FIELDVALTRIM,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fPrice)
			'Get long Description
			f.Intrinsic.String.Build("SELECT text from ORDER_LN_TEXT WHERE ORDER_NUM='{0}' AND ORDER_LINE='{1}0'",v.DataTable.dtAll(v.Local.i).SO!FIELDVALTRIM,V.DataTable.dtAll(v.Local.i).SOLine!fieldvaltrim,v.Local.ssql)
			f.Intrinsic.Control.If(v.DataTable.dtLng.Exists)
				f.Data.DataTable.Close("dtLng")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.CreateFromSQL("dtLng",con,v.Local.ssql,true)
			f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtLng.RowCount--,1)
				f.Intrinsic.String.Concat(v.Local.sLongDesc,v.DataTable.dtLng(v.Local.j).TEXT!FIELDVALTRIM,v.Ambient.NewLine,v.Local.sLongDesc)
			f.Intrinsic.Control.Next(v.Local.j)
			v.Local.spart.Set(v.DataTable.dtAll(v.Local.i).SOPart!fieldvaltrim)
			v.Local.sDescription.Set(v.DataTable.dtAll(v.Local.i).Description!fieldvaltrim)
			v.Local.sPL.Set(v.DataTable.dtAll(v.Local.i).Product_Line!FIELDVALTRIM)	
			f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll(v.Local.i).SOPart!fieldval," --- ",v.DataTable.dtAll(v.Local.i).Description!fieldval,v.Ambient.NewLine,V.Local.sMessage)
			f.Data.DataTable.AddRow("dtParts","Part",v.Local.spart,"Desc",v.Local.sDescription,"PrdL",v.Local.sPL,"UoMs",v.Local.sUm,"Prce",v.Local.fPrice,"Orig",v.Local.i,"Long",v.Local.sLongDesc)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Reset i before continuing on
	v.Local.i.Set(0)
	f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Create Parts?",4,v.Local.lret)
	f.Intrinsic.Control.If(v.Local.lret,=,6)
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtParts.RowCount--,1)
			v.Local.spart.Set(v.DataTable.dtParts(v.Local.i).Part!fieldvaltrim)
			v.Local.sDescription.Set(v.DataTable.dtParts(v.Local.i).Desc!fieldvaltrim)
			v.Local.sPL.Set(v.DataTable.dtParts(v.Local.i).PrdL!FIELDVALTRIM)
			v.Local.sUm.Set(v.DataTable.dtParts(v.Local.i).UoMs!FIELDVALTRIM)		
			v.Local.sLongDesc.Set(v.DataTable.dtParts(v.Local.i).Long!fieldvaltrim)
			V.Local.fPrice.Set(V.DataTable.dtParts(v.Local.i).Prce!fieldval)
			F.Intrinsic.Control.If(v.Local.sPL.Trim,=,"")
				v.Local.sPL.Set("FM")
			F.Intrinsic.Control.EndIf
			F.Global.Inventory.GetGSSPart(V.Local.sPart,"",V.Local.sShortRet)
			f.Global.Inventory.CreatePart(v.Local.sShortRet,v.Local.sUm,v.Local.sDescription,v.Local.sLoc,v.Local.sPL,"","","",v.Local.fPrice,"NOMAINT")
			f.Intrinsic.Control.CallSub(longdesc,"Part",v.Local.sShortRet,"LongDesc",v.Local.sLongDesc)
			F.Intrinsic.String.ConcatCallWrapperArgs("O","D",v.Local.sShortRet,v.Local.sParams)
			F.Intrinsic.String.Concat(V.Caller.CompanyCode,"!*!","O","!*!","!*!","!*!",v.Local.sShortRet.UCase,"!*!","",V.Local.sParams)
			F.Global.General.CallWrappersync(3500,V.Local.sParams)
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtParts(v.Local.i).Orig!Fieldval,"ScheduleWO","False")
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtParts(v.Local.i).Orig!fieldval,"GSSPart",v.Local.sShortRet)
		f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.EndIf
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(True)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub(FrmOrderReview_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreateParts_Click.End

Program.Sub.longDesc.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.spart.Declare
	v.Local.sLong.Declare
	v.Local.spart.Set(v.Args.part)
	v.Local.sLong.Set(v.Args.longdesc)
	
	f.Intrinsic.String.Build("SELECT PART, TEXT FROM INV_EXTRA_TEXT WHERE PART='{0}'",v.Local.spart,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
		f.Intrinsic.String.Build("INSERT INTO INV_EXTRA_TEXT VALUES ('{0}','{1}')",v.Local.spart,v.Local.sLong,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.Else
'		f.Intrinsic.String.Build("UPDATE INV_EXTRA_TEXT SET TEXT='{0}' WHERE PART='{1}'",V.Local.sLong,v.Local.spart,v.Local.ssql)
'		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.longDesc.End

Program.Sub.Schedule.Start
f.Intrinsic.Control.Try
	GUI.FrmOrderReview.GsGCAllOpen.enabled(false)
	v.Local.sswitch.Declare
	v.Local.SSQL.Declare
	v.Local.irows.Declare(long)
	V.Local.iRows.Set(0)
	v.Local.i.Declare(long)
	v.Local.ddate.Declare(date)
	V.Local.dToday.Declare(date)
	v.Local.sdate.Declare
	V.Local.SDATELong.declare
	V.Local.sDateUS.Declare
	V.Local.DDATEUS.Declare(date)
	V.Local.SDUE.Declare
	v.Local.sDateSched.declare
	v.Local.sparams.Declare
	v.Local.sMessage.Declare
	v.Local.sret.Declare
	v.Local.lret.Declare(long)
	v.Local.sFileDir.Declare
	V.Local.spart.Declare
	V.Local.spartrev.Declare
	v.Local.fSuffix.Declare(float)
	v.Local.sSuffix.Declare
	v.Local.lID.Declare(long)
	v.Local.lSched.Declare
	V.Local.sNames.Declare
	v.Local.sValues.Declare
	V.Local.sMChk.Declare
	v.Local.x.Declare(long)
	v.Local.y.Declare(long)
	v.Local.bExit.Declare(boolean)
	v.Local.sCMarkFile.Declare
	v.Local.sMark.Declare
	
	f.Intrinsic.String.Concat(v.Caller.GasDir,"\GAB_6924_COMPLETION.txt",v.Local.sCMarkFile)
	f.Intrinsic.File.File2String(v.Local.sCMarkFile,v.Local.sMark)
	
	
	v.Local.dToday.Set(v.Ambient.Date)
	v.Local.sswitch.Set(v.Args.sSwitch)
	f.Intrinsic.Control.If(v.DataTable.dtWO.Exists)
		f.Data.DataTable.Close("dtWO")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.DataTable.dtWOP.Exists)
		f.Data.DataTable.Close("dtWOP")
	f.Intrinsic.Control.EndIf
	
	'Datatable for storing original work orders' position in the grid control
	f.Data.DataTable.Create("dtWO")
	f.Data.DataTable.AddColumn("dtWO","SO","string")
	f.Data.DataTable.AddColumn("dtWO","SOLine","string")
	f.Data.DataTable.AddColumn("dtWO","SODueDate","string")
	f.Data.DataTable.AddColumn("dtWO","OrigRow","long")
	
	'Datatable for printing work orders
	f.Data.DataTable.Create("dtWOP")
	f.Data.DataTable.AddColumn("dtWOP","WO","String")
	f.Data.DataTable.AddColumn("dtWOP","Suffix","string")
	
	'Start the process of formatting the data for Global Shop
	f.Intrinsic.Control.If(v.Local.sswitch,=,"N")
		f.Intrinsic.String.Concat("Create work orders for sales orders: ",V.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.ElseIf(v.Local.sswitch,=,"R")
		f.Intrinsic.String.Concat("Reschedule Work Orders: ",V.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.control.EndIf
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			'f.Intrinsic.Debug.ShowCallerInfo
			f.Intrinsic.String.Left(v.DataTable.dtAll(v.Local.i).CODE_SOURCE!fieldvaltrim,1,v.Local.sMChk)
			'F.Intrinsic.Control.If(v.Local.sMChk.Trim,=,"M","or",v.DataTable.dtAll(v.Local.i).RtrCompl!fieldval,=,True)
			'omitted for demo only, put back!!!!
			'F.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).RtrCompl!fieldval,=,v.Local.sMark)
				f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll(v.Local.i).SO!fieldval,"-",v.DataTable.dtAll(v.Local.i).SOLINE!fieldval," ",V.DataTable.dtAll(V.Local.I).SOQty!FIELDVALTrim," of ",V.DataTable.dtAll(V.Local.I).SOPart!FieldvalTrim," ",v.Ambient.NewLine,V.Local.sMessage)
				f.Intrinsic.String.Mid(v.DataTable.dtAll(v.Local.i).SOPART!FIELDVAL,18,3,v.Local.spartrev)
				f.Intrinsic.String.mid(v.DataTable.dtAll(v.Local.i).SOPART!FIELDVAL,1,17,v.Local.spart)
				f.Data.DataTable.AddRow("dtWO","SO",v.DataTable.dtAll(v.Local.i).SO!FIELDVAL,"SOLine",v.DataTable.dtAll(v.Local.i).SOLINE!Fieldval,"SODueDate",v.DataTable.dtAll(v.Local.i).SODueDate!FIELDVALString,"OrigRow",v.Local.i)
			'f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Reset i before continuing on
	v.Local.i.Set(0)
	f.Intrinsic.Control.If(v.DataTable.dtWO.RowCount,<>,0)
		f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Create Work Orders",4,v.Local.lret)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("No valid orders selected.  Please double check the router is complete.")
	f.Intrinsic.Control.EndIf
	
	'fIND OUT IF FORWARD SCHEDULING IS TURNED ON
	F.ODBC.Connection!con.executeandreturn("SELECT IFNULL(F_LONG,0) FROM OP_HEADER WHERE ID='401162' AND SEQUENCE='0000'",v.Local.lSched)
			
			
	f.Intrinsic.Control.If(v.Local.lret,=,6)
		f.Intrinsic.UI.InvokeWaitDialog("Generating Work Orders and Scheduling.")
		F.Intrinsic.Control.For(V.Local.i,0,v.DataTable.dtWO.RowCount--,1)
			v.Local.ddate.set(V.DataTable.dtWO(v.Local.i).SODueDate!FieldValString)
			f.Intrinsic.String.Format(v.Local.ddate,"dd/mm/yyyy",v.Local.sdatesched)
			f.Intrinsic.String.Format(v.Local.ddate,"MMDDYY",v.Local.sdate)
			f.Intrinsic.String.Format(v.Local.ddate,"YYYYMMDD",v.Local.SDATELong)
			F.Intrinsic.String.Format(V.Local.ddate,"DD/MM/YY",V.Local.SDATEUS)
			'Create the WO from SO
			f.Intrinsic.Control.If(v.Local.sswitch,=,"N")
				f.Intrinsic.String.Concat("O!*!",v.DataTable.dtWO(v.local.i).SO!fieldvaltrim,"!*!",v.DataTable.dtWO(v.local.i).SOLine!fieldvaltrim,"0!*!1",v.Local.sparams)
				f.Global.General.CallWrappersync(200801,v.Local.sparams)
			f.Intrinsic.Control.EndIf
			
			'Uncheck the boxes
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtWO(v.Local.i).OrigRow!fieldvallong,"ScheduleWO","False")
			
			'WO Creation set, much faster
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtWO(v.Local.i).OrigRow!fieldvallong,"WOCreated","True")
		f.Intrinsic.Control.Next(v.Local.i)
		
		'Bumped this out after the fact, let the scheduling happen as is for speed reasons
		'AFter WO creation, grab the WO number
		F.Intrinsic.Control.For(V.Local.i,0,v.DataTable.dtWO.RowCount--,1)
			f.Intrinsic.String.Build("SELECT JOB, SUFFIX FROM V_ORDER_TO_WO WHERE ORDER_NO='{0}' AND ORDER_LINE='{1}0'",v.DataTable.dtWO(v.local.i).SO!fieldvaltrim,v.DataTable.dtWO(v.local.i).SOLine!fieldvaltrim,v.Local.SSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.SSQL,v.Local.sret)
			f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
			v.Local.ddate.set(V.DataTable.dtWO(v.Local.i).SODueDate!FieldValString)
			
			'Write the WO/Suffix to the cell
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtWO(v.Local.i).OrigRow!fieldvallong,"WO",v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.UBound,>=,1)
				f.Data.DataTable.SetValue("dtAll",V.DataTable.dtWO(v.Local.i).OrigRow!fieldvallong,"Suffix",v.Local.sret(1))
				'Add it to print table
				f.Data.DataTable.AddRow("dtWOP","WO",v.Local.sret(0),"Suffix",v.Local.sret(1))
			f.Intrinsic.Control.Else
				'Add to print table, this routine should not happen.
				f.Data.DataTable.AddRow("dtWOP","WO",v.Local.sret(0),"Suffix","")
			f.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.If(V.Local.sswitch,=,"R")
				F.Intrinsic.Control.If(v.Local.lSched,=,"2","or",v.Local.lSched,=,"3")
					F.Global.APS.ScheduleJob(v.Local.sret(0),v.Local.sret(1),"F",v.Local.dToday)
				f.Intrinsic.Control.Else
					F.Global.APS.ScheduleJob(v.Local.sret(0),v.Local.sret(1),"B",v.Local.ddate)
					'To correct bug where user checks line and goes to reschedule.
					f.Intrinsic.String.Format(v.Local.ddate,"MMDDYY",v.Local.sdate)
					F.Intrinsic.String.Concat("UPDATE JOB_HEADER SET DATE_DUE='",v.Local.sdate,"' WHERE JOB='",v.Local.sRet(0),"' and SUFFIX='",V.Local.sRet(1),"'",V.Local.sSQL)
					F.ODBC.Connection!con.Execute(v.Local.ssql)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.Local.sswitch,=,"N")
				'ONLY FORWARD SCHEDULE IF COMPANY OPTION TURNED ON.
				F.Intrinsic.Control.If(v.Local.lSched,=,"2","or",v.Local.lSched,=,"3")
					F.Global.APS.ScheduleJob(v.Local.sret(0),v.Local.sret(1),"F",v.Local.dToday)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			'If Suffix = '000' then it is a BOM and need to grab the others
			f.Intrinsic.Control.If(v.Local.sret.UBound,>=,1)
				F.Intrinsic.Control.If(V.Local.sret(1),=,"000")
					f.Intrinsic.string.Build("select max(suffix) from V_JOB_HEADER  where job='{0}'",v.Local.sret(0),v.Local.SSQL)
					f.ODBC.Connection!con.executeandreturn(v.Local.SSQL,v.Local.fSuffix)
					f.Intrinsic.Control.For(v.Local.x,1,v.Local.fSuffix,1)
						f.Intrinsic.String.LPad(v.Local.x,"0",3,v.Local.sSuffix)
						f.Data.DataTable.AddRow("dtWOP","WO",v.Local.sret(0),"Suffix",v.Local.sSuffix)
					f.Intrinsic.Control.next(v.Local.x)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
			v.Local.fSuffix.Set(1)
		f.Intrinsic.Control.Next(v.Local.i)
		f.Intrinsic.Control.CallSub(cmdRefresh_Click)

		f.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.Control.EndIf
	GUI.FrmOrderReview.GsGCAllOpen.enabled(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.endtry
Program.Sub.Schedule.End

Program.Sub.cmdBWDSched_Click.Start
f.Intrinsic.Control.CallSub(schedule,"sSwitch","N")
Program.Sub.cmdBWDSched_Click.End

Program.Sub.cmdResched_Click.Start
f.Intrinsic.Control.CallSub(schedule,"sSwitch","R")
Program.Sub.cmdResched_Click.End

Program.Sub.cmdCreateRtr_Click.Start
f.Intrinsic.Control.Try

	gui.FrmOrderReview.GsGCAllOpen.enabled(False)
	v.Local.i.Declare(long)
	v.Local.ssql.Declare(string)
	v.Local.spart.Declare(string)
	v.Local.sUm.Declare(string)
	v.Local.sDescription.Declare(string)
	v.Local.sLoc.Declare(string)
	v.Local.sPL.Declare(string)
	v.Local.sSource.Declare(string)
	v.Local.sMessage.Declare(string)
	v.Local.sShortRet.Declare(string)
	v.Local.sParams.Declare(string)
	v.Local.sret.Declare(string)
	v.Local.fPrice.Declare(float)
	v.Local.lret.Declare(long)
	v.Local.sMChk.Declare(string)
	
	f.Intrinsic.Control.If(v.DataTable.dtRtrs.Exists)
		f.Data.DataTable.Close("dtRtrs")
	f.Intrinsic.Control.EndIf	
	
	f.Data.DataTable.Create("dtRtrs","true")
	f.Data.DataTable.AddColumn("dtRtrs","Part","String")
	f.Data.DataTable.AddColumn("dtRtrs","Desc","String")
	f.Data.DataTable.AddColumn("dtRtrs","PrdL","String")
	f.Data.DataTable.AddColumn("dtRtrs","UoMs","String")
	f.Data.DataTable.AddColumn("dtRtrs","Prce","Float")
	f.Data.DataTable.AddColumn("dtRtrs","Orig","Long")
	'Verify if the user wants to do this.
	f.Intrinsic.String.Concat("Create/Maintain Routers for: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			f.Intrinsic.String.Left(v.DataTable.dtAll(v.Local.i).CODE_SOURCE!fieldvaltrim,1,v.Local.sMChk)
			F.Intrinsic.Control.If(v.Local.sMChk,=,"M","or",v.DataTable.dtAll(v.Local.i).RtrCompl!fieldval,=,True)
				f.Intrinsic.String.Build("select um_order from V_ORDER_LINES where ORDER_NO='{0}' and RECORD_NO='{1}0'",v.DataTable.dtAll(v.Local.i).SO!FIELDVALTRIM,v.DataTable.dtAll(v.Local.i).SOLine!FIELDVALTRIM,v.Local.ssql)
				f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sUm)
				f.Intrinsic.String.Build("select price_order from V_ORDER_LINES where ORDER_NO='{0}' and RECORD_NO='{1}0'",v.DataTable.dtAll(v.Local.i).SO!FIELDVALTRIM,v.DataTable.dtAll(v.Local.i).SOLine!FIELDVALTRIM,v.Local.ssql)
				f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fPrice)
				v.Local.spart.Set(v.DataTable.dtAll(v.Local.i).SOPart!fieldvaltrim)
				v.Local.sDescription.Set(v.DataTable.dtAll(v.Local.i).Description!fieldvaltrim)
				v.Local.sPL.Set(v.DataTable.dtAll(v.Local.i).Product_Line!FIELDVALTRIM)	
				f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll(v.Local.i).SOPart!fieldval," --- ",v.DataTable.dtAll(v.Local.i).Description!fieldval,v.Ambient.NewLine,V.Local.sMessage)
				f.Data.DataTable.AddRow("dtRtrs","Part",v.Local.spart,"Desc",v.Local.sDescription,"PrdL",v.Local.sPL,"UoMs",v.Local.sUm,"Prce",v.Local.fPrice,"Orig",v.Local.i)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'Reset i before continuing on
	v.Local.i.Set(0)
	f.Intrinsic.Control.If(v.DataTable.dtRtrs.RowCount,<>,0)
		f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Create/Maintain Routers?",4,v.Local.lret)
	f.Intrinsic.Control.Else
		f.Intrinsic.UI.Msgbox("No valid lines selected.  Please double check that the source code is Manufactured (M or F).")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Local.lret,=,6)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtRtrs.RowCount--,1)
			v.Local.spart.Set(v.DataTable.dtRtrs(v.Local.i).Part!fieldvaltrim)
			v.Local.sDescription.Set(v.DataTable.dtRtrs(v.Local.i).Desc!fieldvaltrim)
			v.Local.sPL.Set(v.DataTable.dtRtrs(v.Local.i).PrdL!FIELDVALTRIM)
			v.Local.sUm.Set(v.DataTable.dtRtrs(v.Local.i).UoMs!FIELDVALTRIM)
			
			f.Intrinsic.Control.If(v.Global.bLongPart)
				F.Global.Inventory.GetGSSPart(V.Local.sPart,"",V.Local.sShortRet)
			f.Intrinsic.Control.Else
				v.Local.sShortRet.Set(v.Local.sPart.Trim)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.String.Build("SELECT * FROM V_ROUTER_HEADER WHERE ROUTER='{0}'",v.Local.sShortRet,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)


			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
				'Open new router screen
				F.Intrinsic.String.ConcatCallWrapperArgs("N",v.Local.sShortRet,v.Local.sParams)
				F.Global.General.CallWrappersync(400000,V.Local.sParams)
			f.Intrinsic.Control.Else
				'Open existing router screen
				F.Intrinsic.String.ConcatCallWrapperArgs("O",v.Local.sShortRet,v.Local.sParams)
				F.Global.General.CallWrappersync(400000,V.Local.sParams)
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtRtrs(v.Local.i).Orig!Fieldval,"ScheduleWO","False")
			f.Data.DataTable.SetValue("dtAll",v.DataTable.dtRtrs(v.Local.i).Orig!fieldval,"GSSPart",v.Local.sShortRet)
		f.Intrinsic.Control.Next(v.Local.i)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	f.Intrinsic.Control.EndIf
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(True)
f.Intrinsic.Control.Catch
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub(FrmOrderReview_UnLoad)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreateRtr_Click.End

Program.Sub.cmdCreateBOM_Click.Start
f.Global.General.CallWrapperAsync(50,"BM0020GI/O")
Program.Sub.cmdCreateBOM_Click.End

Program.Sub.addPOText.Start
f.Intrinsic.Control.Try
	v.Local.ssql.Declare
	v.Local.sRet.Declare
	v.Local.sEDes.Declare
	
	'Removing line breaks from the SO line Text to the PO line text because this breaks PSQL -SS 1/13/2022
	f.Intrinsic.String.Replace(v.Args.POText,v.Ambient.NewLine," ",v.Local.sEDes)
	
	F.Intrinsic.String.Build("select * from PO_LN_TEXT WHERE PO_NUM='{0}' AND LINE='{1}'",v.Args.PONum,v.Args.POLn,v.Local.ssql)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
		f.Intrinsic.String.Build("INSERT INTO PO_LN_TEXT (PO_NUM,LINE,TEXT) VALUES ('{0}','{1}','{2}')",v.Args.PONum,v.Args.POLn,v.Local.sEDes.PSQLFriendly,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("UPDATE PO_LN_TEXT SET TEXT='{0}' WHERE PO_NUM='{1}' AND LINE='{2}'",v.Local.sEDes.PSQLFriendly,v.Args.PONum,v.Args.POLn,v.Local.ssql)
		f.ODBC.Connection!con.execute(v.Local.ssql)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmOrderReview_Unload)
f.Intrinsic.Control.EndTry
Program.Sub.addPOText.End

Program.Sub.QuickInvoice.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare
	v.Local.sSOHead.Declare
	v.Local.sMessage.Declare
	v.Local.sparams.Declare
	v.Local.sfile.Declare
	v.Local.sText.Declare
	v.Local.sInvc.Declare
	v.Local.lret.Declare
	
	
	f.Intrinsic.Control.If(v.DataTable.dtQInv.Exists)
		f.Data.DataTable.Close("dtQInv")
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Control.If(v.DataTable.dtQInvU.Exists)
		f.Data.DataTable.Close("dtQinvU")
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.Create("dtQInv","true")
	f.Data.DataTable.AddColumn("dtQInv","OrderNo","String")
	f.Data.Dataview.Create("dtQinv","dvQinv")
	
	'Verify if the user wants to do this.
	f.Intrinsic.String.Concat("Create Invoices for Orders: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			v.Local.sSOHead.Set(v.DataTable.dtAll(v.Local.i).SO!FieldvalTrim)
			f.Intrinsic.String.Concat(v.Local.sMessage,v.DataTable.dtAll(v.Local.i).SO!fieldvaltrim,v.Ambient.NewLine,V.Local.sMessage)
			f.Data.DataTable.AddRow("dtQinv","OrderNo",v.Local.sSOHead)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	f.Data.DataView.ToDataTableDistinct("dtQinv","dvQinv","dtQinvU","OrderNo")
	
	f.Global.General.CallWrapperSync(50,"ORD101")
	
	f.Intrinsic.UI.Msgbox(v.Local.sMessage,"Create Invoices",4,v.Local.lret)
	F.Intrinsic.Control.If(V.Local.lret,=,6)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtQinvU.RowCount--,1)
			f.Global.General.CallWrapperSync(7060,v.DataTable.dtQinvU(v.Local.i).OrderNo!fieldvaltrim)
			'Grab Invoice Number
			f.Intrinsic.String.Concat(v.Caller.FilesDir,"\OTRNS",V.Caller.Terminal,v.Local.sfile)
			f.Intrinsic.File.File2String(v.Local.sfile,v.Local.sText)
			f.Intrinsic.String.Mid(v.Local.sText,10,6,v.Local.sInvc)
			f.Intrinsic.Control.CallSub(ProcessInvoice,"Invoice",v.Local.sInvc)
		f.Intrinsic.Control.Next(v.Local.i)
	F.Intrinsic.Control.EndIf
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(frmOrderReview_Unload)
f.Intrinsic.Control.EndTry

Program.Sub.QuickInvoice.End

Program.Sub.ProcessInvoice.Start
F.Intrinsic.Control.SetErrorHandler("ProcessInvoice_Err")
F.Intrinsic.Control.ClearErrors

'Description::  Prints and saves the invoice PDF.
'Args:: Invoice as String
'Returns:: None
'Test Text

V.Local.sError.Declare(String)
V.Local.sParams.Declare(String)
V.Local.sValues.Declare(String)
V.Local.sInvoiceFQP.Declare(String)
V.Local.iRunID.Declare(Long)
V.Local.iLogID.Declare(Long)
V.Local.iRet.Declare(Long)
v.Local.sSQL.Declare(String)
v.Local.sTemp.Declare(String)
V.Local.bIsWeight.Declare
v.Local.sCreditMemo.Declare(string, "")
v.Local.sqlMemoCheck.Declare
v.Local.sInvoiceDir.Declare

'Clearing BI table as although callwrapper performs this action, it cannot be always trusted to do so
Function.Intrinsic.Control.CallSub(clearbitable)

F.Intrinsic.String.Build("SELECT CREDIT_MEMO_FLAG FROM ORDER_HIST_HEAD WHERE INVOICE = '{0}'", v.args.Invoice, v.Local.sqlMemoCheck)
F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sqlMemoCheck, v.Local.sCreditMemo)

F.Intrinsic.Control.If(v.Local.sCreditMemo, =, "Y")
	Function.Intrinsic.String.Build("{0}!*!",v.Args.Invoice,V.Local.sParams)
	F.Global.General.CallWrapperSyncBIO(200905,V.Local.sParams)	
F.Intrinsic.Control.Else
		'Building params to call reprint invoice callwrapper - 200900
	Function.Intrinsic.String.Build("{0}!*!",v.Args.Invoice,V.Local.sParams)
	F.Global.General.CallWrapperSyncBIO(200900,V.Local.sParams)'Builds BI data to PRT_LASR_INVOICE table, but does not call report to print
F.Intrinsic.Control.EndIf

f.Intrinsic.String.Build("Delete from PRT_LASER_INVOICE where TERMINAL_NO='{0}' and INVOICE_NO<>'{1}'",v.Caller.Terminal,v.Args.Invoice,v.Local.sSQL)
f.ODBC.Connection!con.Execute(v.Local.sSQL)

'Checking what report ID to use for generating Crystal Report
Function.Intrinsic.Control.CallSub(getreportid)'Returns report ID used in BI data in a args named ReportID, if return is -1 the callwrapper failed and BI data was not generated properly

'Changes related to weights for reports with ID's 62 and 65. Parameters that are passed will change depending on the value of this variable
Function.Intrinsic.Control.If(V.Args.ReportID,=,"000062",Or,V.Args.ReportID,=,"000065")
	V.Local.bIsWeight.Set(True)
Function.Intrinsic.Control.EndIf

Function.Intrinsic.Control.If(V.Args.ReportID,=,-1)
	'No report ID found, this is a sign the callwrapper failed to generate the BI data
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf

'Making sure invoices dir exists
Function.Intrinsic.Control.CallSub(createinvoicedir)

'Generate File Name
f.Intrinsic.Control.CallSub(createfilename,"Invoice",v.Args.Invoice)

'Building file path for saving
f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\Invoices",v.Local.sInvoiceDir)
Function.Intrinsic.String.Build("{0}\{1}",V.local.sInvoiceDir,v.Args.sFile,V.Local.sInvoiceFQP)

f.Intrinsic.Variable.ArgToVar("sFile",v.Local.sTemp)

f.Intrinsic.Variable.AddRV("sFile",v.local.sTemp)

f.Intrinsic.Debug.SetLA(v.Local.sInvoiceFQP)

'Building params name and values list for Crystal Report

f.Intrinsic.Control.If(v.Local.bIsWeight,=,True)
	V.Local.sParams.Set("REPORTID*!*TERMINAL*!*PROGRAM*!*TRACK*!*IVCTYPE*!*PRTSHIP*!*PRTORD*!*PRTWGT*!*WGTTOTAL*!*WGTTITLE")
	f.Intrinsic.Control.If(v.Global.bTracking,=,True)
		Function.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}*!*{5}*!*{6}*!*{7}*!*{8}*!*{9}",V.Args.ReportID,V.Caller.Terminal,V.Caller.Caller,"Y","","","",V.Global.bPrtWgt,V.Global.bWgtTotal,v.Global.sWgtTitle,V.Local.sValues)
	f.Intrinsic.Control.Else
		Function.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}*!*{5}*!*{6}*!*{7}*!*{8}*!*{9}",V.Args.ReportID,V.Caller.Terminal,V.Caller.Caller,"","","","",V.Global.bPrtWgt,V.Global.bWgtTotal,v.Global.sWgtTitle,V.Local.sValues)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Else
	V.Local.sParams.Set("REPORTID*!*TERMINAL*!*PROGRAM*!*TRACK*!*IVCTYPE*!*PRTSHIP*!*PRTORD")
	f.Intrinsic.Control.If(v.Global.bTracking,=,True)
		Function.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}*!*{5}*!*{6}",V.Args.ReportID,V.Caller.Terminal,V.Caller.Caller,"Y","","","",V.Local.sValues)
	f.Intrinsic.Control.Else
		Function.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}*!*{5}*!*{6}",V.Args.ReportID,V.Caller.Terminal,V.Caller.Caller,"","","","",V.Local.sValues)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf

'Getting Run ID
F.Global.BI.GetRunID(V.Local.iRunID)
'Getting log ID
F.Global.BI.StartLogging(V.Local.iRunID,V.Args.ReportID,-1,"",V.Local.iLogID)

'Callreport to generate data
F.Global.BI.RunReportPreProcessor(V.Local.iRunID,V.Local.iLogID,V.Local.sParams,V.Local.sValues,"",4,True,"",-1,"",0,V.Local.sInvoiceFQP,"",V.Local.iRet)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ProcessInvoice_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_Einvoicing.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf

Program.Sub.ProcessInvoice.End

Program.Sub.ClearBITable.Start
F.Intrinsic.Control.SetErrorHandler("ClearBITable_Err")
F.Intrinsic.Control.ClearErrors

'Description::  Clears the invoice BI table of data for user's terminal number.
'Args:: None
'Returns:: None

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)

Function.Intrinsic.String.Build("Delete PRT_LASER_INVOICE where TERMINAL_NO = '{0}'",V.Caller.Terminal,V.Local.sSql)
F.ODBC.Connection!con.Execute(V.Local.sSql)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ClearBITable_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_Einvoicing.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf

Program.Sub.ClearBITable.End

Program.Sub.GetReportID.Start
F.Intrinsic.Control.SetErrorHandler("GetReportID_Err")
F.Intrinsic.Control.ClearErrors

'Description::  Gets the report ID from invoice BI table to use for printing report.
'Args:: None
'Returns:: ReportID as Long

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sReportID.Declare(String)

'Gets the report ID that the callwrapper used in BI table.  This is because CORE already has the logic within it's processes to determine the correct report ID to use for invoice
Function.Intrinsic.String.Build("Select DISTINCT RPTID from PRT_LASER_INVOICE where TERMINAL_NO = '{0}'",V.Caller.Terminal,V.Local.sSql)
'F.ODBC.Connection!con.OpenLocalRecordsetRO("rst",V.Local.sSql)
f.ODBC.Connection!con.Executeandreturn(v.Local.sSql,v.Local.sReportID)
'Function.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,false)
F.Intrinsic.Control.If(v.Ambient.executeandreturneof.not)
	'V.Local.sReportID.Set(V.ODBC.con!rst.FieldValTrim!RPTID)
	'Return report ID used in BI data
	Function.Intrinsic.Variable.AddRV("ReportID",V.Local.sReportID)
Function.Intrinsic.Control.Else
	'Could not find BI data, this is a sign that callwrapper failed, so return -1
	Function.Intrinsic.Variable.AddRV("ReportID",-1)
Function.Intrinsic.Control.EndIf
'F.ODBC.con!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GetReportID_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_Einvoicing.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf

Program.Sub.GetReportID.End

Program.Sub.CreateFileName.Start
F.Intrinsic.Control.SetErrorHandler("CreateFileName_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sTemp.Declare(String)
v.Local.sQuery.Declare(String)
v.Local.sRet.Declare(String)

f.Intrinsic.String.Build("{0}.pdf",v.Args.Invoice,v.Local.sTemp)

f.Intrinsic.Variable.AddRV("sFile",v.Local.sTemp)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("CreateFileName_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4304_E-Invoicing.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf

Program.Sub.CreateFileName.End

Program.Sub.CreateInvoiceDir.Start
F.Intrinsic.Control.SetErrorHandler("CreateInvoiceDir_Err")
F.Intrinsic.Control.ClearErrors

'Description::  Creates directory for saving invoice PDFs.
'Args:: None
'Returns:: None

V.Local.sError.Declare(String)
V.Local.sFolder.Declare(String)
V.Local.bExists.Declare(Boolean)

'Making sure invoices dir exists
f.Intrinsic.String.Concat(v.Caller.PluginsDir,"\Invoices\",v.Local.sFolder)
F.Intrinsic.File.DirExists(V.Local.sFolder,V.Local.bExists)
Function.Intrinsic.Control.If(V.Local.bExists,=,false)
	'Creating directory if it does not exist
	Function.Intrinsic.File.CreateDir(V.Local.sFolder)
Function.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("CreateInvoiceDir_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_Einvoicing.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(unload)
Function.Intrinsic.Control.EndIf

Program.Sub.CreateInvoiceDir.End

Program.Sub.cmdCreatePO_Click.Start
f.Intrinsic.Control.Try
	v.Local.i.Declare(long)
	v.Local.ssql.Declare(string)
	v.Local.spart.Declare(string)
	v.Local.sUm.Declare(string)
	v.Local.sDescription.Declare(string)
	v.Local.sLoc.Declare(string)
	v.Local.sPL.Declare(string)
	v.Local.sSource.Declare(string)
	v.Local.sMessage.Declare(string)
	v.Local.sShortRet.Declare(string)
	v.Local.sParams.Declare(string)
	v.Local.sret.Declare(string)
	V.Local.sHold.Declare(string)
	V.Local.sDate.Declare(string)
	v.Local.sGSSPart.Declare(string)
	V.Local.sGLACCOUNT.Declare(string)
	v.Local.sSOHead.Declare(string)
	v.Local.sSOLine.Declare(string)
	v.Local.sVend.Declare(string)
	v.Local.dDate.Declare(date)
	v.Local.fPrice.Declare(float)
	v.Local.fcost.Declare(float)
	V.Local.fACst.Declare(float)
	v.Local.fICst.Declare(float)
	v.Local.fQty.Declare(float)
	v.Local.lret.Declare(long)
	
	f.Intrinsic.Control.If(v.DataTable.dtPO.Exists)
		f.Data.DataTable.Close("dtPO")
	f.Intrinsic.Control.EndIf	
	
	f.Data.DataTable.Create("dtPO","true")
	f.Data.DataTable.AddColumn("dtPO","Part","String")
	f.Data.DataTable.AddColumn("dtPO","Desc","String")
	f.Data.DataTable.AddColumn("dtPO","Vend","String")
	f.Data.DataTable.AddColumn("dtPO","PrdL","String")
	f.Data.DataTable.AddColumn("dtPO","UoMs","String")
	f.Data.DataTable.AddColumn("dtPO","Cost","Float")
	f.Data.DataTable.AddColumn("dtPO","ACst","Float")
	f.Data.DataTable.AddColumn("dtPO","ICst","Float")
	f.Data.DataTable.AddColumn("dtPO","Orig","Long")
	f.Data.DataTable.AddColumn("dtPO","Date","String")
	f.Data.DataTable.AddColumn("dtPO","Qnty","Float")
	f.Data.DataTable.AddColumn("dtPO","Acct","String")
	f.Data.DataTable.AddColumn("dtPO","GPrt","String")
	f.Data.DataTable.AddColumn("dtPO","SOHD","String")
	f.Data.DataTable.AddColumn("dtPO","SOLI","String")
	'Verify if the user wants to do this.
	f.Intrinsic.String.Concat("Create Purchase Order for: ",v.Ambient.NewLine,v.Local.sMessage)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtAll.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtAll(v.Local.i).ScheduleWO!fieldval,=,"True")
			v.Local.sPart.Set(v.DataTable.dtAll(v.Local.i).SOPart!fieldvaltrim)
			v.Local.sDescription.Set(v.DataTable.dtAll(v.Local.i).Description!fieldvaltrim)
			v.Local.sPL.Set(v.DataTable.dtAll(v.Local.i).Product_Line!FIELDVALTRIM)	
			V.Local.dDate.Set(v.DataTable.dtAll(v.Local.i).SODueDate!FIELDVAL)
			V.Local.sUm.Set(v.DataTable.dtAll(v.Local.i).UM_ORDER!FIELDVALTRIM)
			v.Local.fQty.Set(v.DataTable.dtAll(v.Local.i).SOQty!fieldval)
			v.Local.sGSSPart.Set(v.DataTable.dtAll(v.Local.i).GSSPart!FIELDVALTRIM)
			v.Local.sSOHead.Set(v.DataTable.dtAll(v.Local.i).SO!FieldvalTrim)
			v.Local.sSOLine.Set(v.DataTable.dtAll(v.Local.i).SOLine!FieldvalTrim)
			
			F.Intrinsic.String.Format(V.Local.dDate,"YYYYMMDD",V.Local.sDate)
			F.Intrinsic.String.Build("select PURCHASING_ACCOUNT from V_PRODUCT_LINE where PRODUCT_LINE='{0}'",v.Local.sPL,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sGLAccount)
			f.Intrinsic.Control.If(v.Local.sGLACCOUNT.Trim,=,"")
				'Need to prepopulate if GL is blank		
			f.Intrinsic.Control.EndIf
			
			'Grab the alt cost
			F.Intrinsic.String.Build("select AMT_ALT_COST from V_INVENTORY_MSTR where PART='{0}'",v.Local.sGSSPart.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fACst)
			
			F.Intrinsic.String.Build("select AMT_COST from V_INVENTORY_MSTR where PART='{0}'",v.Local.sGSSPart.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.fICst)
			
			F.Intrinsic.String.Build("select NAME_VENDOR from V_INVENTORY_MST2 where PART='{0}'",v.Local.sGSSPart.Trim,v.Local.ssql)
			f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sVend)
			
			v.Local.fcost.Set(v.Local.fACst)
			f.Intrinsic.Control.If(v.Local.fcost,=,0)
				v.Local.fcost.Set(v.Local.fICst)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.String.Concat(v.Local.sMessage," ",v.DataTable.dtAll(v.Local.i).SOPart!fieldval," --- ",v.DataTable.dtAll(v.Local.i).Description!fieldval,v.Ambient.NewLine,V.Local.sMessage)
			f.Data.DataTable.AddRow("dtPO","SOHD",v.Local.sSOHead,"SOLI",v.Local.sSOLine,"Part",v.Local.spart,"Desc",v.Local.sDescription,"PrdL",v.Local.sPL,"UoMs",v.Local.sUm,"Cost",v.Local.fCost,"Orig",v.Local.i,"Date",v.Local.sDate,"Qnty",v.Local.fQty,"Acct",v.Local.sGLACCOUNT,"GPrt",v.Local.sGSSPart,"ACst",v.Local.fACst,"ICst",v.Local.fICst,"Vend",v.Local.sVend)
			
			
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	gui.frmSelectVend.gsgcLines.DataSource("dtPO")
	gui.frmSelectVend.gsgcLines.AddGridviewFromDatatable("gvPO","dtPO")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Desc","Caption","Description")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","PrdL","Caption","Product Line")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","UoMs","Caption","UoM")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Qnty","Caption","Quantity")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Vend","Caption","Vendor Name")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Orig","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Date","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Acct","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","GPrt","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","SOHD","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","SOLI","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","ACst","Visible","False")
	gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","ICst","Visible","False")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Part","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Desc","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","PrdL","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Cost","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Qnty","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","UoMs","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Vend","HeaderFontBold",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Part","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Desc","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","PrdL","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","UoMs","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Qnty","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Cost","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Vend","HeaderHAlignment","Center")
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Part","ReadOnly",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Desc","ReadOnly",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","PrdL","ReadOnly",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","UoMs","ReadOnly",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Qnty","ReadOnly",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Cost","ReadOnly",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Part","AllowEdit",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Desc","AllowEdit",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","PrdL","AllowEdit",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","UoMs","AllowEdit",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Qnty","AllowEdit",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Cost","AllowEdit",True)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Vend","AllowEdit",False)
	Gui.frmSelectVend.gsgcLines.SetColumnProperty("gvPO","Part","CellForeColor","Blue")
	gui.frmSelectVend.gsgcLines.anchor(15)
	gui.frmSelectVend.cmdNewPO.anchor(6)
	gui.frmSelectVend..Show
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreatePO_Click.End

Program.Sub.cmdNewPO_Click.Start
f.Intrinsic.Control.Try
	f.Intrinsic.UI.InvokeWaitDialog("Processing Order")
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(false)
	v.Local.shold.Declare(string)
	v.Local.sPart.Declare(string)
	v.Local.sDesc.Declare(string)
	v.Local.sEDes.Declare(string)
	V.Local.sSODs.Declare(string)
	v.Local.sPrdL.Declare(string)
	v.Local.sUoMs.Declare(string)
	v.Local.sAcct.Declare(string)
	v.Local.sDate.Declare(string)
	v.Local.sVend.Declare(string)
	v.Local.sParm.Declare(string)
	v.Local.sFile.Declare(string)
	V.Local.sRslt.Declare(string)
	v.Local.sLine.Declare(string)
	v.Local.sPONm.Declare(string)
	v.Local.sTemp.Declare(string)
	v.Local.sSQL.Declare(string)
	v.Local.fExtn.Declare(float)
	v.Local.fCost.Declare(float)
	v.Local.fQnty.Declare(float)
	v.Local.i.Declare(long)
	v.Local.j.Declare(long)
	
	'Create PO in Global Shop
	f.Data.DataTable.AddRow("175100","AutoNumber","Y","Addcomments","N","OpenPO","N")
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPO.RowCount--,1)
		v.Local.sPart.Set(v.DataTable.dtPO(v.Local.i).GPRT!FIELDVALTRIM)
		v.Local.sDesc.Set(v.DataTable.dtPO(v.Local.i).DESC!FIELDVALTRIM)
		F.Intrinsic.String.Concat(v.DataTable.dtPO(v.Local.i).SOHD!FIELDVALTRIM,"-",V.DataTable.dtPO(v.Local.i).SOLI!FIELDVALTRIM,V.Local.sSODs)
		v.Local.sPrdL.Set(v.DataTable.dtPO(v.Local.i).PRDL!FIELDVALTRIM)
		v.Local.sUoMs.Set(v.DataTable.dtPO(v.Local.i).UOMS!FIELDVALTRIM)
		v.Local.sAcct.Set(v.DataTable.dtPO(v.Local.i).ACCT!FIELDVALTRIM)
		v.Local.sDate.Set(v.DataTable.dtPO(v.Local.i).DATE!FIELDVALTRIM)
		v.Local.sVend.Set(v.Screen.frmSelectVend!txtVendorNo.text)
		v.Local.fQnty.Set(v.DataTable.dtPO(v.Local.i).QNTY!FIELDVAL)
		v.Local.fCost.Set(v.DataTable.dtPO(v.Local.i).COST!FIELDVAL)
		F.Intrinsic.Math.Mult(v.Local.fCost,v.Local.fQnty,v.Local.fExtn)
		f.Data.DataTable.AddRow("175100File","Vendor",v.Local.sVend,"Part",v.Local.sPart,"Loc","","DueDate",v.Local.sDate,"Description",v.Local.sSODs,"InvUM",v.Local.sUoMs,"InvCost",v.Local.fCost,"InvQty",v.Local.fQnty,"POUM",v.Local.sUoMs,"POCost",v.Local.fCost,"POQty",v.Local.fQnty,"GLAccount",v.Local.sAcct,"Extension",v.Local.fExtn)
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.CallSub(175100Sync)	
	
	'Read the resulting file to grab PO number
	f.Intrinsic.String.Concat(V.Caller.FilesDir,"\SLPUR",v.Caller.Terminal,".TXT",v.Local.sFile)
	f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sRslt)
	f.Intrinsic.String.Left(v.Local.sRslt,7,v.Local.sPONm)
	
	'Query the PO and create datatable
	f.Intrinsic.String.Build("SELECT PURCHASE_ORDER, RECORD_NO, DESCRIPTION FROM V_PO_LINES WHERE PURCHASE_ORDER='{0}'",v.Local.sPONm,v.Local.ssql)
	f.Intrinsic.Control.If(v.DataTable.dtPOTemp.Exists)
		f.Data.DataTable.Close("dtPOTemp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtPOTemp","con",v.Local.sSQL,true)
	
	'Loop through and update the sales orders and replace with original description
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPOTemp.RowCount--,1)
		F.Intrinsic.String.Split(v.DataTable.dtPOTemp(v.Local.i).DESCRIPTION!FIELDVALTRIM,"-",v.Local.sTemp)
		
		f.Intrinsic.Control.If(v.Local.sTemp.UBound,>,0)
			f.Intrinsic.String.Build("SELECT DESCRIPTION FROM V_ORDER_LINES WHERE ORDER_NO='{0}' AND RECORD_NO='{1}0'",v.Local.stemp(0).trim,v.Local.sTemp(1).trim,v.Local.ssql)
			F.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sDesc)
		
			'Establish Extra Description
			f.Intrinsic.Control.If(v.DataTable.dtEDesc.Exists)
				f.Data.DataTable.Close("dtEDesc")
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.If(v.Screen.frmSelectVend!chkCopySOExtraDesc.Value,=,1)
				f.Intrinsic.String.Build("SELECT TEXT FROM ORDER_LN_TEXT WHERE ORDER_NUM='{0}' AND ORDER_LINE='{1}0'",v.Local.sTemp(0).trim,v.Local.sTemp(1).trim,v.Local.sSQL)
				f.Data.DataTable.CreateFromSQL("dtEDesc","con",v.Local.sSQL)
				f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtEDesc.RowCount--,1)
					f.Intrinsic.String.Concat(v.Local.sEDes,v.DataTable.dtEDesc(v.Local.J).Text!fieldvaltrim,v.Local.sEDes)
				f.Intrinsic.Control.Next(v.Local.j)
			f.Intrinsic.Control.EndIf
			
			'Do the link back to the user fields
			f.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_2='{0}', USER_3='{1}' WHERE ORDER_NO='{2}' AND RECORD_NO='{3}0'",V.DataTable.dtPOTemp(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,v.DataTable.dtPOTemp(v.Local.i).RECORD_NO!FIELDVALTRIM,v.Local.sTemp(0),v.Local.sTemp(1),v.Local.sSQL)
			F.ODBC.Connection!con.execute(v.Local.ssql)
			
			
			'Update the description back to original state
			f.Intrinsic.String.Build("UPDATE PO_LINES SET DESCRIPTION='{0}', USER_5='SO#: {3}' WHERE PURCHASE_ORDER='{1}' AND RECORD_NO='{2}'",v.Local.sDesc,v.DataTable.dtPOTemp(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,v.DataTable.dtPOTemp(v.Local.i).RECORD_NO!FIELDVALTRIM,v.DataTable.dtPOTemp(v.Local.i).DESCRIPTION!FIELDVALTRIM,v.Local.sSQL)
			f.ODBC.Connection!con.execute(v.Local.ssql)
			
			'Add extra text to PO
			f.Intrinsic.Control.If(v.Screen.frmSelectVend!chkCopySOExtraDesc.Value,=,1)
				f.Intrinsic.Control.CallSub(addPOText,"PONum",v.DataTable.dtPOTemp(v.Local.i).PURCHASE_ORDER!FIELDVALTRIM,"POLn",v.DataTable.dtPOTemp(v.Local.i).RECORD_NO!FIELDVALTRIM,"POText",v.Local.sEDes)
			f.Intrinsic.Control.EndIf
			
			V.Local.sEDes.Set("")
			
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.Control.CallSub(frmSelectVend_Unload)
	f.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	gui.FrmOrderReview.GsGCAllOpen.enabled(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdNewPO_Click.End

Program.Sub.Form_UnLoad.Start
Program.Sub.Form_UnLoad.End

Program.Sub.frmSelectVend_UnLoad.Start
f.Data.DataTable.Close("dtPO")
gui.frmSelectVend..Visible(false)
Program.Sub.frmSelectVend_UnLoad.End

Program.Sub.cmdVendBrw_Click.Start
V.Local.sRet.Declare(String)
V.Local.sTitles.Declare(String)
V.Local.iWidths.Declare(String)
V.Local.stemp.Declare(String)
V.Local.ssql.Declare(String)

f.Intrinsic.UI.SetBrowserHotTypeAhead(true)

F.intrinsic.string.split("Vendor No.*!*Vendor Name","*!*",v.local.sTitles)
F.intrinsic.string.split("2000*!*3000","*!*",v.local.iWidths)

V.Local.ssql.set("SELECT VENDOR, NAME_VENDOR FROM V_VENDOR_MASTER")

F.intrinsic.ui.browser("Select a Vendor Code",con,v.Local.ssql,v.local.sTitles,v.local.iWidths,v.local.sRet)

F.intrinsic.control.if(v.local.sRet,"=","***CANCEL***")
F.intrinsic.control.else
  	F.intrinsic.string.split(v.local.sRet,"*!*",v.local.sRet)
  	gui.frmSelectVend.txtVendorNo.Text(v.Local.sRet(0))
F.Intrinsic.Control.endif

Program.Sub.cmdVendBrw_Click.End

Program.Sub.gsgcLines_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sPart.Declare
	V.Local.sGSSPart.Declare
	Gui.frmSelectVend.gsgcLines.GetCellValueByColumnName("gvPO","GPrt",V.Args.RowIndex,V.Local.sGssPart)
	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("Part")
			f.Data.DataTable.AddRow("300011","Part",v.Local.sGssPart,"Location","","Switch","M")
			f.Intrinsic.Control.CallSub(300011Async)
	f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.gsgcLines_RowCellClick.End

Program.Sub.acMenuItems_ElementClick.Start
F.Intrinsic.Control.Try

	gui.FrmOrderReview.progressBar1.SetFocus(1)
	
	f.Intrinsic.Control.SelectCase(v.Args.Caption)
	
		f.Intrinsic.Control.Case("Quick Invoice (Single Outlook Email)")
			f.Intrinsic.Control.CallSub(QuickInvoice)
			
		f.Intrinsic.Control.Case("Auto Purchase Order Generation")
			f.Intrinsic.Control.CallSub(cmdCreatePO_click)
			
		f.Intrinsic.Control.Case("Auto Work Order Generation")
			f.Intrinsic.Control.CallSub(cmdBWDSched_Click)
			
		f.Intrinsic.Control.Case("Open Part Documents")
			f.Intrinsic.Control.CallSub(cmdOpenDoc_Click)
			
		f.Intrinsic.Control.Case("Print Work Order Documents")
			f.Intrinsic.Control.CallSub(cmdPrintDoc_Click)
		
		f.Intrinsic.Control.Case("Reschedule Work Order")
			f.Intrinsic.Control.CallSub(cmdResched_Click)
		
		f.Intrinsic.Control.Case("Create/Verify BOM")
			f.Intrinsic.Control.CallSub(cmdCreateBOM_Click)
		
		f.Intrinsic.Control.Case("Create/Verify Part")
			f.Intrinsic.Control.CallSub(cmdCreateParts_Click)
			
		f.Intrinsic.Control.Case("Create/Verify Router")
			f.Intrinsic.Control.CallSub(cmdCreateRtr_Click)
			
		f.Intrinsic.Control.Case("New Work Order")
			f.Intrinsic.Control.CallSub(MenuClickNewWO)
		
		f.Intrinsic.Control.Case("New Sales Order")
			f.Intrinsic.Control.CallSub(MenuClickNewSO)
		
	f.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.acMenuItems_ElementClick.End

Program.Sub.FrmOrderReview_ExportClick.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.CallSub(MenuClickExport)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.FrmOrderReview_ExportClick.End

Program.Sub.FrmOrderReview_RefreshClick.Start
f.Intrinsic.Control.Try
	gui.FrmOrderReview.GsGCAllOpen.enabled(false)
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	gui.FrmOrderReview.GsGCAllOpen.enabled(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry
Program.Sub.FrmOrderReview_RefreshClick.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$ghuff$}$20220929124351574$}$s89N93NTeas40rhsU1ZwRbCBj1OiVVM1PVC8yo5TS5KCValfypOltmZW+2JXPzZBF/DIVtZmosI=
Program.Sub.Comments.End
